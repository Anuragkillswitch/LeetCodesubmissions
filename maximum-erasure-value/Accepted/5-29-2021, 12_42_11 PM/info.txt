{"id":499741367,"lang":"java","time":"1 month, 3 weeks","timestamp":1622272331,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/499741367/","is_pending":"Not Pending","title":"Maximum Erasure Value","memory":"52.9 MB","code":"class Solution {\n    public int maximumUniqueSubarray(int[] nums) {\n        int[] hash = new int[10001];\n        int r = 0, len = nums.length, l = 0, max = 0, sum = 0, cnt = 0;\n        while(r < len) {\n            sum += nums[r];\n\t\t\t// cnt > 0 means some number is duplicated\n            if(hash[nums[r++]]++ >= 1) cnt++;\n            while(cnt > 0) {\n\t\t\t\t// find the leftmost index that no duplicated numbers betwen [l, r]\n                sum -= nums[l];\n                if(hash[nums[l++]]-- == 2) cnt--;                \n            }\n            max = Math.max(max, sum);\n        }\n        return max;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-erasure-value"}