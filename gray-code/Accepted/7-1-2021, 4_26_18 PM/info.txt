{"id":515809614,"lang":"java","time":"3 weeks, 2 days","timestamp":1625136978,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/515809614/","is_pending":"Not Pending","title":"Gray Code","memory":"45.8 MB","code":"class Solution {\n    public List<Integer> grayCode(int n) {\n        List<Integer> result = new ArrayList<>();\n        grayCodeHelper(result, n);\n        return result;\n    }\n\n    private void grayCodeHelper(List<Integer> result, int n) {\n        if (n == 0) {\n            result.add(0);\n            return;\n        }\n        // we derive the n bits sequence from the (n - 1) bits sequence.\n        grayCodeHelper(result, n - 1);\n        int currentSequenceLength = result.size();\n        // Set the bit at position n - 1 (0 indexed) and assign it to mask.\n        int mask = 1 << (n - 1);\n        for (int i = currentSequenceLength - 1; i >= 0; i--) {\n            // mask is used to set the (n - 1)th bit from the LSB of all the numbers present in the current sequence.\n            result.add(result.get(i) | mask);\n        }\n    }\n}","compare_result":"1111111111111111","title_slug":"gray-code"}