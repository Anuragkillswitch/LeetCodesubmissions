{"id":513441153,"lang":"python","time":"4Â weeks","timestamp":1624716546,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/513441153/","is_pending":"Not Pending","title":"Count of Smaller Numbers After Self","memory":"N/A","code":"from sortedcontainers import SortedList\nclass Solution:\n    def countSmaller(self, nums: List[int]) -> List[int]:\n        sortedlist = SortedList([]) # To maintain the sorted list on go and also have O(logN) insert and bisect.\n        result = []\n        for num in nums[::-1]:\n            idx = sortedlist.bisect_left(num) # bisect to find where the current number should insert\n            result.append(idx) # this gives the lesser numbers on the left\n            sortedlist.add(num) # then update the sorted list \n        return result[::-1]","compare_result":"00000000000000000000000000000000000000000000000000000000000000000","title_slug":"count-of-smaller-numbers-after-self"}