{"id":493404369,"lang":"java","time":"2 months, 1 week","timestamp":1621074972,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/493404369/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"38.9 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseList(ListNode head) {\n        Stack<ListNode> S=new Stack<ListNode>();\n        while(head!=null)\n        { \n          S.push(head);\n          head=head.next;\n        }\n        \n        ListNode dummy=new ListNode(-1);\n        head=dummy;\n        while(!S.isEmpty())\n        {\n            ListNode current=S.pop();\n            head.next=new ListNode(current.val);\n            head=head.next;\n        }\n        \n        return dummy.next;\n    }\n}","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list"}