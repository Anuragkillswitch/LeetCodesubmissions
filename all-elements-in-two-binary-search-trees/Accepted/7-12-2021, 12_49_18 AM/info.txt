{"id":520945356,"lang":"java","time":"1 week, 6 days","timestamp":1626031158,"status_display":"Accepted","runtime":"34 ms","url":"/submissions/detail/520945356/","is_pending":"Not Pending","title":"All Elements in Two Binary Search Trees","memory":"41.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    PriorityQueue<Integer> pq;\n    public List<Integer> getAllElements(TreeNode root1, TreeNode root2) {\n        pq=new PriorityQueue<>();\n        helper(root1);\n        helper(root2);\n        List<Integer> result=new ArrayList<>();\n        while(!pq.isEmpty())\n            result.add(pq.poll());\n        \n        return result;\n    }\n    private void helper(TreeNode root)\n    {\n        if(root==null)return;\n        helper(root.left);\n        pq.add(root.val);\n        helper(root.right);\n        return;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"all-elements-in-two-binary-search-trees"}