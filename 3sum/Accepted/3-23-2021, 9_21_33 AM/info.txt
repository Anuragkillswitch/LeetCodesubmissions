{"id":471268623,"lang":"c","time":"4Â months","timestamp":1616471493,"status_display":"Accepted","runtime":"124 ms","url":"/submissions/detail/471268623/","is_pending":"Not Pending","title":"3Sum","memory":"20.4 MB","code":"int cmp(int *a, int *b)\n{\n    return *a - *b;\n}\n\nint **threeSum(int *nums, int numsSize, int *returnSize, int **returnColumnSizes)\n{\n    int **rst;\n    int rstSize = 0;\n    int basicSize = 8;\n    int i, j, k, sum;\n\n    rst = (int **)malloc(sizeof(int *) * basicSize);\n    *returnColumnSizes = (int **)malloc(sizeof(int) * basicSize);\n\n    qsort(nums, numsSize, sizeof(int), cmp);\n\n    for (i = 0; i < numsSize - 1; i++) {\n        if (i > 0 && nums[i] == nums[i - 1]) {\n            continue;\n        }\n\n        j = i + 1;\n        k = numsSize - 1;\n        while (j < k) {\n            sum = nums[i] + nums[j] + nums[k];\n            if (sum == 0) {\n                rst[rstSize] = (int *)malloc(sizeof(int) * 3);\n                (*returnColumnSizes)[rstSize] = 3;\n                rst[rstSize][0] = nums[i];\n                rst[rstSize][1] = nums[j];\n                rst[rstSize][2] = nums[k];\n\n                rstSize++;\n\n                while (j < k && nums[j] == nums[j + 1]) {\n                    j++;\n                }\n                j++;\n                k--;\n\n                if (rstSize == basicSize) {\n                    basicSize *= 2;\n                    rst = (int **)realloc(rst, sizeof(int *) * basicSize);\n                    (*returnColumnSizes) = (int **)realloc((*returnColumnSizes),sizeof(int) * basicSize);\n\t\t\t\t}\n\n            } else if (sum > 0) {\n                k--;\n            } else {\n                j++;\n            }\n        }\n    }\n\n    *returnSize = rstSize;\n\n    return rst;\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum"}