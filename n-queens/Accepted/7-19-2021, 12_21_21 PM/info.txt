{"id":524823282,"lang":"java","time":"6Â days","timestamp":1626677481,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/524823282/","is_pending":"Not Pending","title":"N-Queens","memory":"39.1 MB","code":"class Solution {\n    \n    List<List<String>> result;\n    public List<List<String>> solveNQueens(int n) {\n        result=new ArrayList<>();\n        char[][] matrix=new char[n][n];\n        for(char[] a : matrix)\n        {\n            Arrays.fill(a,'.');\n        }\n        \n        magicFunction(0,n,matrix);\n        return result;\n    }\n    \n    \n    private void magicFunction(int row,int n,char[][] matrix)\n    {\n        if(row==n){\n            List<String> s=makeList(matrix);\n            result.add(s);\n            return;\n        }else{\n            for(int i=0;i<n;i++)\n            {\n                if(isValid(row,i,n,matrix)){\n                    matrix[row][i]='Q';\n                    magicFunction(row+1,n,matrix);\n                    matrix[row][i]='.';\n                }\n            }\n        }\n    }\n    \n     boolean isValid(int row,int col,int n,char[][] matrix)\n    {\n        //checking row wise\n        for(int i=0;i<row;i++)\n        {\n            if(matrix[i][col] == 'Q')\n                return false;\n        }\n        int i = row,j=col;\n        while(i>=0 && j>=0)\n        {\n            if(matrix[i][j] == 'Q')\n                return false;\n            i--;j--;\n        }\n        i=row;j=col;\n        while(i>=0 && j<n)\n        {\n            if(matrix[i][j] == 'Q')\n                return false;\n            i--;j++;\n        }\n        return true;\n    }\n    \n    \n    List<String> makeList(char[][] matrix)\n    {\n        List<String> list = new ArrayList<>();\n        for(char[] array : matrix)\n            list.add(String.valueOf(array));\n        return list;\n    }\n}","compare_result":"111111111","title_slug":"n-queens"}