{"id":493927920,"lang":"java","time":"2 months, 1 week","timestamp":1621163217,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/493927920/","is_pending":"Not Pending","title":"Boats to Save People","memory":"48 MB","code":"//Minimum number of boats\n//SO greedy?\nclass Solution {\n    public int numRescueBoats(int[] people, int limit) {\n        Arrays.sort(people); //nlogn\n        \n        int numBoats=0;\n        //Two pointers\n        int i=0; //The lightest person\n        int j=people.length-1; //The heaviest person (me)\n        \n        while(i<=j) //We haven't saved everyone until these pointers meet\n        {\n            if(people[i]+people[j]<=limit)\n            {\n                \n                i++;\n                j--;\n            }else\n            {\n                //If there is a heavy person and the light person\n                // does not fit in with him then we have to choose\n                //only the heavier person and increment the number of boats\n                j--;\n            }\n            numBoats++;\n        }\n        return numBoats;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"boats-to-save-people"}