{"id":526076033,"lang":"java","time":"3 days, 16 hours","timestamp":1626881474,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/526076033/","is_pending":"Not Pending","title":"Push Dominoes","memory":"N/A","code":"class Solution {\n    public String pushDominoes(String dominoes) {\n        int n=dominoes.length();\n        int[] left=new int[n];\n        int nearestLeft=-1; //Nearest left force\n        for(int i=n-1;i>=0;i--){\n            if(dominoes.charAt(i)=='L'){\n                nearestLeft=i;\n            }else if(dominoes.charAt(i)=='R'){\n                nearestLeft=-1;//Force nullified\n            }\n            left[i]=nearestLeft;\n        }\n        \n        int[] right=new int[n];\n        int nearestRight=-1;\n        \n        for(int i=0;i<n;i++){\n            if(dominoes.charAt(i)=='R'){\n                nearestRight=i;\n            }else if(dominoes.charAt(i)=='L'){\n                nearestRight=-1;//Force nullified\n            }\n            right[i]=nearestRight;\n        }\n       \n        StringBuilder s=new StringBuilder();\n        for(int i=0;i<n;i++){\n            \n            if(dominoes.charAt(i)=='.')\n            {int nearestLeftIndex=nearestLeft;\n            int nearestRightIndex=nearestRight;\n            \n            int leftDistance=nearestLeftIndex==-1?Integer.MAX_VALUE:Math.abs(nearestLeftIndex-i);\n            int rightDistance=nearestRightIndex==-1?Integer.MAX_VALUE:Math.abs(nearestRightIndex-i);\n            \n            \n            if(leftDistance==rightDistance){\n                s.append('.');\n            }else if(leftDistance<rightDistance){\n                s.append('L');\n            }else s.append('R');}else{\n                s.append(dominoes.charAt(i));\n            }\n        }\n        \n        return s.toString();\n    }\n}","compare_result":"1010111110111101000000110000000000000000000","title_slug":"push-dominoes"}