{"id":507196878,"lang":"java","time":"1 month, 1 week","timestamp":1623567217,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/507196878/","is_pending":"Not Pending","title":"Construct Target Array With Multiple Sums","memory":"N/A","code":"class Solution {\n    public boolean isPossible(int[] target) {\n        PriorityQueue<Integer> pq=new PriorityQueue<>((a,b)->(b-a));//Max Heap\n        int total=0;\n        for(int t : target)\n           { pq.offer(t);\n             total+=t;}\n        int max=0;\n        int k=0;\n        while(!pq.isEmpty())\n        {\n            max=pq.poll();\n            if(max==1)return true;\n            if(k!=0)\n                total-=max;\n            \n            k++;\n           \n            \n            int sumOfTheRemainingElements=total-max; \n            pq.offer(max-sumOfTheRemainingElements);\n        }\n        return false;\n        \n    }\n}","compare_result":"10100000000000000000000000000000000000000000000000000000000000000000000","title_slug":"construct-target-array-with-multiple-sums"}