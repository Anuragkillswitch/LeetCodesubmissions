{"id":506764840,"lang":"java","time":"1 month, 1 week","timestamp":1623499495,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/506764840/","is_pending":"Not Pending","title":"Minimum Number of Refueling Stops","memory":"39.5 MB","code":"class Solution {\n    public int minRefuelStops(int target, int startFuel, int[][] stations) {\n        if(startFuel>=target)return 0;\n        \n        int xCurrent=startFuel; //max coordinate you can reach with intitial fuel!\n        int noOfStopsNeeded=0;\n        \n        PriorityQueue<Integer> maxAvailableFuel=new PriorityQueue<>((a,b)->(b-a));//Max heap\n        \n        \n      for(int[] station : stations)\n      {\n          int nextStationX=station[0];\n          int fuelAtStation=station[1];\n          \n          while(xCurrent<nextStationX)//Exhausted All your fuel\n          {\n              if(maxAvailableFuel.isEmpty())\n                  return -1;\n              \n              xCurrent+=maxAvailableFuel.poll();\n              noOfStopsNeeded++;\n          }\n          maxAvailableFuel.offer(fuelAtStation);\n      }\n        \n        while(xCurrent<target)\n        {\n             if(maxAvailableFuel.isEmpty())\n                  return -1;\n              \n              xCurrent+=maxAvailableFuel.poll();\n              noOfStopsNeeded++;\n        }\n        \n        return noOfStopsNeeded;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-refueling-stops"}