{"id":500435343,"lang":"java","time":"1 month, 3 weeks","timestamp":1622390461,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/500435343/","is_pending":"Not Pending","title":"Construct Binary Tree from Inorder and Postorder Traversal","memory":"39.4 MB","code":"class Solution {\n\tprivate int ind=0;\n\tpublic TreeNode buildTree(int[] inorder, int[] postorder) {\n\t\tind=postorder.length-1;\n\t\tMap<Integer,Integer> m=new HashMap<>();\n\t\tfor(int i=0;i<inorder.length;i++)   m.put(inorder[i],i);\n\t\treturn get_ans(inorder,postorder,m,0,inorder.length-1);\n\t}\n\tprivate TreeNode get_ans(int []inorder,int []postorder,Map<Integer,Integer> m,int s,int e){\n\t\tif(s>e) return null;\n\t\tTreeNode root=new TreeNode(postorder[ind]);\n\t\tint mid=m.get(postorder[ind--]);\n\t\troot.right=get_ans(inorder,postorder,m,mid+1,e);\n\t\troot.left=get_ans(inorder,postorder,m,s,mid-1);\n\t\treturn root;\n\t}\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-binary-tree-from-inorder-and-postorder-traversal"}