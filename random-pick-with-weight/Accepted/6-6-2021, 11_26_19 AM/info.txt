{"id":503725575,"lang":"java","time":"1 month, 2 weeks","timestamp":1622958979,"status_display":"Accepted","runtime":"21 ms","url":"/submissions/detail/503725575/","is_pending":"Not Pending","title":"Random Pick with Weight","memory":"43.2 MB","code":"class Solution {\n    private static final Random random = new Random();\n    private int[] alias;\n    private int[] prob;\n    private int avg = 0;\n\n    public Solution(int[] w) {\n        prob = w;\n        int n = prob.length;\n        alias = new int[n];\n        for(int i = 0; i < n; i++) {\n            avg += prob[i];\n            prob[i] *= n;\n        }\n        Deque<Integer> small = new ArrayDeque<>(), large = new ArrayDeque<>();\n        for(int i = 0; i < n; i++) {\n            (prob[i] >= avg ? large : small).add(i);\n        }\n        while(!small.isEmpty()) {\n            int s = small.poll(), l = large.poll();\n            alias[s] = l;\n            prob[l] -= avg - prob[s];\n            (prob[l] >= avg ? large : small).add(l);\n        }\n    }\n    \n    public int pickIndex() {\n        int i = random.nextInt(prob.length);\n        return random.nextInt(avg) < prob[i] ? i : alias[i];\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"random-pick-with-weight"}