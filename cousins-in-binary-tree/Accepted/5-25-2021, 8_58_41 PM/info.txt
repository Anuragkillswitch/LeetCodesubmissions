{"id":498113526,"lang":"java","time":"2Â months","timestamp":1621956521,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/498113526/","is_pending":"Not Pending","title":"Cousins in Binary Tree","memory":"36.8 MB","code":"class Solution {\n    public boolean isCousins(TreeNode root, int x, int y) {\n        Map<Integer, Integer> depths = new HashMap<>();\n        Map<Integer, Integer> parents = new HashMap<>();\n        traverse(root, parents, 0, depths, 0);\n        return (parents.get(x) != parents.get(y)) && (depths.get(x) == depths.get(y));\n    }\n    \n    private void traverse(TreeNode root, Map<Integer, Integer> parents, int parent, Map<Integer, Integer> depths, int depth) {\n        if (root == null) {\n            return;\n        }\n        parents.put(root.val, parent);\n        depths.put(root.val, depth);\n        traverse(root.left, parents, root.val, depths, depth + 1);\n        traverse(root.right, parents, root.val, depths, depth + 1);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"cousins-in-binary-tree"}