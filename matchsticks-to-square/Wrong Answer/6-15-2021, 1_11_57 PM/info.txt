{"id":508177375,"lang":"java","time":"1 month, 1 week","timestamp":1623742917,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/508177375/","is_pending":"Not Pending","title":"Matchsticks to Square","memory":"N/A","code":"class Solution {\n    public boolean makesquare(int[] matchsticks) {\n        //DFS\n        //Each recursive call we Simulate putting the current match in matchsticks to either sides\n        //finally we check if the sum of the edge is 1/4th of the total sum\n        if(matchsticks==null || matchsticks.length==0)return false;\n        \n        \n        int totalSum=0;\n        for(int m : matchsticks)\n            totalSum+=m;\n        \n        if(totalSum%4!=0)return false;\n        \n        Arrays.sort(matchsticks); \n        \n        for(int i=0;i<matchsticks.length/2;i++)\n        {\n            int temp=matchsticks[i];\n            matchsticks[i]=matchsticks[matchsticks.length-1-i];\n            matchsticks[matchsticks.length-1-i]=temp;\n        }\n        \n        int perm=totalSum/4;\n        return dfs(matchsticks,0,new int[4],perm);\n        \n        \n    }\n    \n    private boolean dfs(int[] matchsticks,int index,int[] target,int perm)\n    {\n        if(index==matchsticks.length) //Reached the end of the array\n        {\n            for(int i : target)\n            {\n                if(i!=perm)return false;\n             }\n            \n            return true;\n        }\n        \n        for(int i=0;i<4;i++)\n        {\n            if(target[i]+matchsticks[index]>perm)continue;\n            \n            target[i]+=matchsticks[index];\n            if(dfs(matchsticks,index+1,target,perm))return true;\n            target[i]-=matchsticks[i];\n            \n        }\n        return false;\n    }\n}","compare_result":"11001111111111111111111111111111111101111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"matchsticks-to-square"}