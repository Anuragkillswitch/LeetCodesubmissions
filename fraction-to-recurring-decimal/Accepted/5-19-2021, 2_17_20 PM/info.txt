{"id":495264467,"lang":"java","time":"2Â months","timestamp":1621414040,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/495264467/","is_pending":"Not Pending","title":"Fraction to Recurring Decimal","memory":"36.1 MB","code":"class Solution {\n    public String fractionToDecimal(int numerator, int denominator) {\n        StringBuilder tem = new StringBuilder();\n         if(numerator < 0 && denominator > 0 || denominator < 0 && numerator > 0)\n            tem.append(\"-\");\n        if(numerator==0)\n            return \"0\";\n        numerator = Math.abs(numerator);\n        denominator = Math.abs(denominator);\n        long r = numerator%denominator;\n        long q = numerator/denominator;\n         tem.append(String.valueOf(Math.abs(q)));\n        Map<Long,Integer> resu = new HashMap<>();\n        if(r == 0){\n            return tem.toString();\n        }\n        else{\n            tem.append(\".\");\n        while(r !=0){\n                if(resu.containsKey(r)){\n                    int k = resu.get(r);\n                    tem.insert(k,\"(\");\n                    tem.append(\")\");\n                    break; \n                }\n            resu.put(r,tem.length());\n         \n            r*=10;\n           q = r/denominator;\n           r = r%denominator;\n          tem.append(String.valueOf(Math.abs(q)));\n         }\n        }\n         \n           return tem.toString(); \n    }\n}","compare_result":"11111111111111111111111111111111111111","title_slug":"fraction-to-recurring-decimal"}