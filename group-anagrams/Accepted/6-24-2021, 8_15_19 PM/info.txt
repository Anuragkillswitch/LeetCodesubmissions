{"id":512584252,"lang":"java","time":"1Â month","timestamp":1624545919,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/512584252/","is_pending":"Not Pending","title":"Group Anagrams","memory":"42.4 MB","code":"class Solution {\n  public List < List < String >> groupAnagrams(String[] strs) {\n    Map < String, List < String >> map = new HashMap < > ();\n \n    for (String s: strs) {\n      String code = getCode(s);\n      if (map.get(code) == null) map.put(code, new ArrayList());\n      map.get(code).add(s);\n    }\n \n    return new ArrayList(map.values());\n  }\n \n  public String getCode(String s) {\n    char carr[] = s.toCharArray();\n    Arrays.sort(carr);\n    return String.valueOf(carr);\n  }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-anagrams"}