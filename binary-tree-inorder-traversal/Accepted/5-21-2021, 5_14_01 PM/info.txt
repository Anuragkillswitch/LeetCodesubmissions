{"id":496217778,"lang":"java","time":"2Â months","timestamp":1621597441,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/496217778/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"38.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n     List<Integer> l;\n    public List<Integer> inorderTraversal(TreeNode root) {\n        l=new ArrayList<>();\n        \n        rec(root);\n        \n        return l;\n    }\n    public void rec(TreeNode root)\n    {\n        if(root==null)\n            return;\n        \n        rec(root.left);\n        l.add(root.val);\n        rec(root.right);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal"}