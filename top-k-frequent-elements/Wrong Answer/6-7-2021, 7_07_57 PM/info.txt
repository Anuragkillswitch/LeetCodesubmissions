{"id":504415743,"lang":"java","time":"1 month, 2 weeks","timestamp":1623073077,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/504415743/","is_pending":"Not Pending","title":"Top K Frequent Elements","memory":"N/A","code":"class Solution {\n    public int[] topKFrequent(int[] nums, int k) {\n        HashMap<Integer,Integer> map=new HashMap<>();\n        \n        for(int num : nums)\n        {\n            map.put(num,map.getOrDefault(num,0)+1);\n        }\n        \n        PriorityQueue<Integer> pQueue\n            = new PriorityQueue<Integer>(\n                Collections.reverseOrder());\n        \n        for(int v : map.values())\n        {\n            pQueue.add(v);\n        }\n        int[] res=new int[k];\n        int p=0;\n        while(k>0)\n        {\n            res[p++]=getKey(map,pQueue.remove());k--;\n        }\n        return res;\n    }\n    \n    \n      private static <K, V> K getKey(Map<K, V> map, V value)\n    {\n        for (K key: map.keySet())\n        {\n            if (value.equals(map.get(key))) {\n                return key;\n            }\n        }\n        return null;\n    }\n}","compare_result":"111011001100010000000","title_slug":"top-k-frequent-elements"}