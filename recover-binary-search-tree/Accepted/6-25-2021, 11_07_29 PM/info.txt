{"id":513098718,"lang":"java","time":"4 weeks, 1 day","timestamp":1624642649,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/513098718/","is_pending":"Not Pending","title":"Recover Binary Search Tree","memory":"39.8 MB","code":"class Solution {\n   TreeNode firstNode;\n   TreeNode secondNode;\n   TreeNode preNode;\n   public void recoverTree(TreeNode root) {\n       backtrace(root); //find the two \"discordant\" nodes(swapped by mistake)\n        //swap the two nodes\n        int num = firstNode.val;      \n        firstNode.val= secondNode.val;\n        secondNode.val = num;\n    \n}\n//BST : if we traverse the tree with inorder traversal, we can get a non-decreasing sequence \nvoid backtrace(TreeNode root)\n{\n     if (root == null) return;\n    backtrace(root.left);\n    if (preNode == null || preNode.val<= root.val) preNode = root; //update the preNode\n    else //we found the wrong node\n    {\n        if (firstNode== null) firstNode = preNode;                 \n        secondNode = root; \n    }\n    backtrace(root.right);\n}\n}","compare_resulttitle_slug":"recover-binary-search-tree"}