{"id":525874887,"lang":"java","time":"4 days, 1 hour","timestamp":1626848805,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/525874887/","is_pending":"Not Pending","title":"Fair Candy Swap","memory":"40.9 MB","code":"class Solution {\n    public int[] fairCandySwap(int[] aliceSizes, int[] bobSizes) {\n        int sb=0,sa=0;\n        for(int a : aliceSizes)\n            sa+=a;\n        for(int b: bobSizes)\n            sb+=b;\n        int diff=(sb-sa)/2;\n        \n        HashSet<Integer> bob=new HashSet<>();\n        for(int c : bobSizes)bob.add(c);\n        \n        for(int a : aliceSizes){\n            if(bob.contains(a+diff)){\n                return new int[]{a,a+diff};\n            }\n        }\n        \n        return new int[]{-1,-1};\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"fair-candy-swap"}