{"id":510164198,"lang":"java","time":"1Â month","timestamp":1624114258,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/510164198/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"39.2 MB","code":"class Solution {\n// Tip :--// Declare result ArrayList in global, Which definitely increase speed. \n    List<Integer> result = new ArrayList<>();\n    \n    public List<Integer> rightSideView(TreeNode root) {\n        \n        showRightView(root, 0);\n        \n    return result;\n    }\n    \n    public void showRightView(TreeNode node, int nodeCount){\n        if(node == null)\n            return;\n        \n        if(result.size() == nodeCount)\n            result.add(node.val);\n        \n        showRightView(node.right , nodeCount+1);\n        showRightView(node.left , nodeCount+1);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view"}