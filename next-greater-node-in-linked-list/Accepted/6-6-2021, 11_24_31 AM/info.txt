{"id":503724910,"lang":"java","time":"1 month, 2 weeks","timestamp":1622958871,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/503724910/","is_pending":"Not Pending","title":"Next Greater Node In Linked List","memory":"43.1 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public int[] nextLargerNodes(ListNode head) {\n         List<Integer> arr = new ArrayList<>();\n        ListNode p = head;\n//         storing node values in an arrayList\n        while(p!=null){\n            arr.add(p.val);\n            p = p.next;\n        }\n        \n        Stack<Integer> stack = new Stack<>();\n        int res[] = new int[arr.size()];//auto initialized to all zero\n        \n        for(int i = 0;i<arr.size();i++){\n            \n            while(!stack.isEmpty() && arr.get(stack.peek()) < arr.get(i)){\n                res[stack.pop()] = arr.get(i);\n            }\n            stack.push(i);\n        }\n        return res;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"next-greater-node-in-linked-list"}