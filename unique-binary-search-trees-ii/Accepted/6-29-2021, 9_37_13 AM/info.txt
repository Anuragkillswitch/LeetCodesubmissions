{"id":514712158,"lang":"java","time":"3 weeks, 5 days","timestamp":1624939633,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/514712158/","is_pending":"Not Pending","title":"Unique Binary Search Trees II","memory":"39.7 MB","code":"class Solution {\n    public List<TreeNode> generateTrees(int n) {\n        \n        return helper(1, n);\n    }\n    \n    \n    public List<TreeNode> helper(int start, int end) {\n        \n        List<TreeNode> res = new ArrayList<>();\n        \n        if (start > end) {\n            res.add(null);\n            return res;\n        }\n        \n        for (int i = start; i <= end; ++i) {\n            \n            List<TreeNode> leftList = helper(start, i-1);\n            List<TreeNode> rightList = helper(i+1, end);\n            \n            for (TreeNode leftNode : leftList) {\n                for (TreeNode rightNode : rightList) {\n                    \n                    TreeNode n = new TreeNode(i);\n                    n.left = leftNode;\n                    n.right = rightNode;\n                    \n                    res.add(n);\n                }\n            }\n        }\n        return res;\n    }\n}","compare_result":"11111111","title_slug":"unique-binary-search-trees-ii"}