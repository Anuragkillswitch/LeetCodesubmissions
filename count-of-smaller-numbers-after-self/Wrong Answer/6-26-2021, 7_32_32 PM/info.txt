{"id":513439110,"lang":"java","time":"4Â weeks","timestamp":1624716152,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/513439110/","is_pending":"Not Pending","title":"Count of Smaller Numbers After Self","memory":"N/A","code":"class Solution { int[] count;\n    public List<Integer> countSmaller(int[] nums) {\n        List<Integer> result=new ArrayList<>();\n        count=new int[nums.length];\n        \n        int[] originalIndex=new int[nums.length];\n        \n        for(int i=0;i<nums.length;i++)\n        {\n            originalIndex[i]=i; \n         }\n        \n        \n        sort(nums,originalIndex,0,nums.length-1);\n        \n        for(int i=0;i<nums.length;i++)\n            result.add(count[i]);\n        \n        \n        return result;\n    }\n                \n    private void sort(int[] nums,int[] originalIndex,int left,int right)\n    {\n        if(left<right)\n        {\n            int mid=left+(right-left)/2;\n            sort(nums,originalIndex,left,mid);\n            sort(nums,originalIndex,mid+1,right);\n            merge(nums,originalIndex,left,mid,right);\n        }\n    }\n                \n    private void merge(int[] nums,int[] originalIndex,int left,int mid,int right)\n    {\n        int leftArraySize=mid-left+1;\n        int rightArraySize=right-mid;\n        \n        int[] leftArray=new int[leftArraySize];\n        int[] rightArray=new int[rightArraySize];\n        \n        for(int i=0;i<leftArraySize;i++)\n        {\n            leftArray[i]=originalIndex[left+i];\n        }\n        \n        for(int i=0;i<rightArraySize;i++)\n        {\n            rightArray[i]=originalIndex[i+mid+1];\n        }\n        \n        int i=0,j=0,k=left;//k is left bound\n        int rightCount=0;//Number of jumps on the right hand side\n        \n        while(i<leftArraySize && j<rightArraySize)\n        {\n            if(nums[leftArray[i]]<=nums[rightArray[j]])\n                {originalIndex[k]=leftArray[i];\n                count[leftArray[i]]+=rightCount;i++;}\n            else{\n                originalIndex[k]=rightArray[j];\n                rightCount++;\n                j++;\n            }\n            k++;\n        }\n        \n        \n        while(i<leftArraySize)\n        {      originalIndex[k]=leftArray[i];\n                count[leftArray[i]]+=rightCount;i++;\n        }\n        \n        while(j<rightArraySize)\n        {\n            originalIndex[k]=rightArray[j];\n            j++;\n            k++;\n        }\n    }\n}","compare_result":"11111111111110001110010001100000000000010100100111000010100011100","title_slug":"count-of-smaller-numbers-after-self"}