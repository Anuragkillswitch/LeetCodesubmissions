{"id":508731766,"lang":"java","time":"1 month, 1 week","timestamp":1623841328,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/508731766/","is_pending":"Not Pending","title":"Counting Bits","memory":"42.8 MB","code":"class Solution {\n    public int[] countBits(int num) {\n        int sum[] = new int[num+1];\n        for(int i = 0; i<=num; i++) {\n            sum[i] = getBits(i);\n        }\n        \n        return sum;\n        \n    }\n    // Method to get bits for each digit\n    /* Apporach: Bitwise and between n and n-1 converts the least significant bit to 0.\n\t*  So if there is 1 present in binary, it will be converted into 0. We can use this method  recursively  to find all 1's.  \n\t*/\n    private int getBits(int n) {\n        int ans = 0 ;\n        while(n != 0) {\n            ans ++;\n            n = n & (n-1);\n        }\n        return ans;\n    }\n}","compare_result":"111111111111111","title_slug":"counting-bits"}