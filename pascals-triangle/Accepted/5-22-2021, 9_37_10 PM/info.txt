{"id":496708131,"lang":"java","time":"2Â months","timestamp":1621699630,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/496708131/","is_pending":"Not Pending","title":"Pascal's Triangle","memory":"36.8 MB","code":"class Solution {\n    public List<List<Integer>> generate(int numRows) {\n        List<List<Integer>> triangle=new ArrayList<>();\n        \n        if(numRows==0)\n            return triangle;\n        \n        List<Integer> firstRow=new ArrayList<>();\n        firstRow.add(1);\n        triangle.add(firstRow);\n        \n        for(int i=1;i<numRows;i++)\n        {\n            List<Integer> PrevRow=triangle.get(i-1);\n            List<Integer> row=new ArrayList<>(); //current row\n            row.add(1); //1 as the first element\n            for(int j=1;j<i;j++)\n            {\n                row.add(PrevRow.get(j-1)+PrevRow.get(j)); //pascal's sum\n            }\n            \n            row.add(1); //1 as the ending element\n            triangle.add(row); //ading to list of lists\n        }\n        \n        return triangle;\n    }\n}","compare_result":"11111111111111","title_slug":"pascals-triangle"}