{"id":519953872,"lang":"java","time":"2 weeks, 1 day","timestamp":1625859724,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/519953872/","is_pending":"Not Pending","title":"Rotate List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode rotateRight(ListNode head, int k) {\n        \n        if(head==null || head.next==null)return head;\n        int count=1;\n        ListNode cur=head;\n        for(;cur.next!=null;cur=cur.next)\n        {\n            count++;\n        }\n        cur.next=head; //Establish circular connection\n        k=k%count;\n        if(k==0)return head; //Multiple of length\n        \n        ListNode newTail=head;\n        for(int i=1;i<count-k;i++)\n            newTail=newTail.next;\n        \n        ListNode newHead=newTail.next;\n        newTail.next=null;\n        return newHead;\n        \n        \n        \n        \n        \n    }\n}","compare_result":"111111101011101101110111011110110111111110110111111110111111111111111111111111111111101111111111011101111111011101101011111101111101111111111111111111111110111111111111111111111111111111111111111111111111101111111111111111111111111","title_slug":"rotate-list"}