{"id":510461648,"lang":"java","time":"1Â month","timestamp":1624164134,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/510461648/","is_pending":"Not Pending","title":"Combinations","memory":"40.3 MB","code":"class Solution {\n\n\tpublic List<List<Integer>> combine(int n, int k) {\n\n\t\tList<List<Integer>> output = new ArrayList<>();\n\t\tList<Integer> inner = new ArrayList<>();\n\t\thelper(output, inner, 1, n, k);\n\t\treturn output;\n\t}\n\n\tpublic void helper(List<List<Integer>> output, List<Integer> inner, int start, int end, int size) {\n\n\t\tif (size == 0) {\n\t\t\toutput.add(inner);\n\t\t\treturn;\n\t\t}\n\n\t\tfor (int i = start; i <= end - size + 1; i++) {\n\t\t\tList<Integer> currentList = new ArrayList<>(inner);\n\t\t\tcurrentList.add(i);\n\t\t\thelper(output, currentList, i + 1, end, size - 1);\n\t\t}\n\t}\n}","compare_result":"111111111111111111111111111","title_slug":"combinations"}