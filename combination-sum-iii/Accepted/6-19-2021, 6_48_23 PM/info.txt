{"id":510131569,"lang":"java","time":"1Â month","timestamp":1624108703,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/510131569/","is_pending":"Not Pending","title":"Combination Sum III","memory":"36.5 MB","code":"class Solution {\n    public List<List<Integer>> combinationSum3(int size, int target) {\n        int arr[]=new int[9];\n        for(int i=0;i<9;i++){\n            arr[i]=i+1;\n        }\n        \n        return combine(arr,target,size);\n    }\n    \n    \n    //using k as target and n as size\n    public List<List<Integer>> combine(int arr[], int k,int n) {\n        ans=new ArrayList<List<Integer>>();\n        solve(arr,0,new ArrayList<>(),k,n);\n        return ans;\n    }\n    \n    ArrayList<List<Integer>> ans;\n    \n    public void solve(int arr[],int idx,ArrayList<Integer> l,int k,int n){\n        if(arr.length==idx){\n            if(k==0&&l.size()==n){\n                ans.add(new ArrayList<>(l));    \n            }\n            return;\n        }\n        \n        \n        int x=arr[idx];\n        \n        //yes call =>element will appear\n        l.add(x);\n        solve(arr,idx+1,l,k-x,n);\n        l.remove(l.size()-1);\n        \n        //no call =>element will not appear\n        solve(arr,idx+1,l,k,n);\n    }\n}","compare_result":"111111111111111111","title_slug":"combination-sum-iii"}