{"id":520995614,"lang":"java","time":"1 week, 6 days","timestamp":1626040183,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/520995614/","is_pending":"Not Pending","title":"Find Median from Data Stream","memory":"N/A","code":"class MedianFinder {\n\n    PriorityQueue<Integer> max;\n    PriorityQueue<Integer> min;\n    public MedianFinder() {\n\t\t  max =  = new PriorityQueue<>(Collections.reverseOrder());\n\t\t  min = new PriorityQueue<>();\n    }\n    \n    public void addNum(int num) {\n        if(max.isEmpty() && min.isEmpty()){\n            max.add(num);\n            return;\n        }\n        if(max.size()==min.size()){\n            if(min.peek()<num){\n                max.add(min.poll());\n                min.add(num);\n            } else{\n                max.add(num);\n            }\n        } else {\n\t\t\t\n            if(num<max.peek()){\n                min.add(max.poll());\n                max.add(num);\n            } else {\n                min.add(num);\n            }\n        }\n        \n    }\n    \n    public double findMedian() {\n        if(max.size()==min.size()){\n            return (max.peek()+min.peek()+0.0)/2;\n        }\n        return max.peek()+0.0;\n    }\n}","compare_result":null,"title_slug":"find-median-from-data-stream"}