{"id":512486160,"lang":"java","time":"1Â month","timestamp":1624526303,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/512486160/","is_pending":"Not Pending","title":"Two Sum IV - Input is a BST","memory":"40.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean findTarget(TreeNode root, int k) {\n        List<Integer> sorted=new ArrayList<>();\n        populate(root,sorted);\n        \n        int i=0;\n        int j=sorted.size()-1;\n        \n        while(i<j)\n        {\n            if(sorted.get(i)+sorted.get(j)==k)\n                return true;\n            if(sorted.get(i)+sorted.get(j)<k)\n            {\n                i++;\n            }else{\n                j--;\n            }\n            \n        }\n        \n        return false;\n    }\n    \n    \n    private void populate(TreeNode root,List<Integer> sorted)\n    {\n        if(root==null)return;\n        \n        //Inorder traversalt to get a sorted array\n        \n        populate(root.left,sorted);\n        \n        sorted.add(root.val);\n        \n        populate(root.right,sorted);\n        \n        return;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"two-sum-iv-input-is-a-bst"}