{"id":510462238,"lang":"java","time":"1Â month","timestamp":1624164229,"status_display":"Accepted","runtime":"35 ms","url":"/submissions/detail/510462238/","is_pending":"Not Pending","title":"Combinations","memory":"52.2 MB","code":"class Solution {\n    public List<List<Integer>> combine(int n, int k) {\n        List<Integer> al = new ArrayList<Integer> ();\n        List<List<Integer>> res = new ArrayList<List<Integer>>();\n        dfs(n,k,al,res,1);\n        return new ArrayList(res);\n        \n    }\n    public void dfs(int n, int k,List<Integer> al, List<List<Integer>> res,int index){\n        if(al.size()==k){\n             res.add(new ArrayList(al));\n             return;\n        }\n       else{ \n           for(int i=index;i<=n;i++){\n             al.add(i);\n            dfs(n,k,al,res,i+1);\n            al.remove(al.size()-1);\n          }\n    }\n    }\n}","compare_result":"111111111111111111111111111","title_slug":"combinations"}