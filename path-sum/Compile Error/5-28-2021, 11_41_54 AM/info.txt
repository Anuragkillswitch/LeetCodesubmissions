{"id":499312074,"lang":"java","time":"1 month, 4 weeks","timestamp":1622182314,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/499312074/","is_pending":"Not Pending","title":"Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean hasPathSum(TreeNode root, int targetSum) {\n        if(root==null)\n            return false;\n        \n        Stack<TreeNode> nodeStack=new Stack<>();\n        Stack<Integer> sumStack=new Stack<>();\n        \n        nodeStack.add(root);\n        sumStack.add(targetSum-root.val);\n        \n        \n        while(!nodeStack.isEmpty())\n        {\n            TreeNode currentNode=nodeStack.pop();\n            int CurrentSum=sumStack.pop();\n            \n            if(CurrentNode.left==null && CurrentNode.right==null && if CurrentSum==0 )\n                  return true;\n            \n            if(currentNode.left!=null)\n               { nodeStack.add(currentNode.left);\n                 sumStack.add(CurrentSum-currentNode.left.val);}\n            \n            if(currentNode.right!=null)\n                { nodeStack.add(currentNode.right);\n                 sumStack.add(CurrentSum-currentNode.right.val);}\n        }\n        \n        return false;\n    }\n}","compare_result":null,"title_slug":"path-sum"}