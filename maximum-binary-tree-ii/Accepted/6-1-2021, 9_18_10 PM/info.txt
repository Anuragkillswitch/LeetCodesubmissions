{"id":501419515,"lang":"java","time":"1 month, 3 weeks","timestamp":1622562490,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/501419515/","is_pending":"Not Pending","title":"Maximum Binary Tree II","memory":"36.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n   public TreeNode insertIntoMaxTree(TreeNode root, int val) {\n        if(null == root) {\n            return new TreeNode(val);\n        }\n        else {\n            if(root.val < val) {\n                TreeNode nroot = new TreeNode(val);\n                nroot.left = root;\n                return nroot;\n            }\n            else {\n                root.right = insertIntoMaxTree(root.right, val);\n                return root;\n            }\n        }\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-binary-tree-ii"}