{"id":482967425,"lang":"java","time":"3Â months","timestamp":1618909550,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/482967425/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nList<List<Integer>> output = new ArrayList<>();\n       if(root == null)\n           return output;\n        Queue<TreeNode> q = new LinkedList<>();\n        q.offer(root);\n        while(!q.isEmpty()){\n            int level = q.size();\n            List<Integer> list = new ArrayList<>();\n            for(int i=0;i<level;i++){\n                TreeNode temp = q.poll();\n                if(temp.left!=null)\n                    q.offer(temp.left);\n                if(temp.right!=null)\n                    q.offer(temp.right);\n                list.add(temp.val);\n            }\n            output.add(list);\n        }\n        return output;    \n    }","compare_result":null,"title_slug":"binary-tree-level-order-traversal"}