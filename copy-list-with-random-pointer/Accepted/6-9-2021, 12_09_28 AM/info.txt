{"id":505055490,"lang":"java","time":"1 month, 2 weeks","timestamp":1623177568,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/505055490/","is_pending":"Not Pending","title":"Copy List with Random Pointer","memory":"42.6 MB","code":"/*\n// Definition for a Node.\nclass Node {\n    int val;\n    Node next;\n    Node random;\n\n    public Node(int val) {\n        this.val = val;\n        this.next = null;\n        this.random = null;\n    }\n}\n*/\n\nclass Solution {\n    public Node copyRandomList(Node head) {\n        return copyRandomList(head, new HashMap<>());\n    }\n\n    private Node copyRandomList(Node node, Map<Node, Node> map) {\n        if (node == null) return null;\n        if (map.containsKey(node)) return map.get(node);\n\n        Node clone = new Node(node.val);\n        map.put(node, clone);\n\n        clone.next = copyRandomList(node.next, map);\n        clone.random = copyRandomList(node.random, map);\n\n        return clone;\n    }\n}","compare_result":"1111111111111111111","title_slug":"copy-list-with-random-pointer"}