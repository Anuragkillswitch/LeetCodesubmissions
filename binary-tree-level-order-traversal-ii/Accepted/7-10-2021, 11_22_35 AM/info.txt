{"id":520116465,"lang":"java","time":"2 weeks, 1 day","timestamp":1625896355,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/520116465/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal II","memory":"39.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<List<Integer>> levelOrderBottom(TreeNode root) {\n        List<List<Integer>> result=new ArrayList<>();\n        if(root==null)return result;\n        \n        Queue<TreeNode> q=new LinkedList<>();\n        q.offer(root);\n        while(!q.isEmpty())\n        {\n            int size=q.size();\n            List<Integer> currentLevel=new ArrayList<>();\n            for(int i=0;i<size;i++) \n            {\n                TreeNode current=q.poll();\n                currentLevel.add(current.val);\n                if(current.left!=null)q.offer(current.left);\n                if(current.right!=null)q.offer(current.right);\n                \n            }\n            result.add(currentLevel);\n                            \n        }\n        \n        Collections.reverse(result);\n        return result;\n    }\n}","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal-ii"}