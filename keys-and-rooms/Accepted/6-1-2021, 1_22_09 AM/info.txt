{"id":501008392,"lang":"java","time":"1 month, 3 weeks","timestamp":1622490729,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/501008392/","is_pending":"Not Pending","title":"Keys and Rooms","memory":"41.8 MB","code":"class Solution {\n    public boolean canVisitAllRooms(List<List<Integer>> rooms) {\n        HashSet<Integer> visited=new HashSet<>();\n        visited.add(0);\n        //DFS USE A STACK\n        Stack<Integer> stack=new Stack<>();\n        stack.add(0);\n        \n        while(!stack.isEmpty())\n        {\n           List<Integer> keys=rooms.get(stack.pop());\n           for(int key : keys)\n           {\n               if(!visited.contains(key))\n               {\n                   visited.add(key);\n                   stack.add(key);\n               }\n           }\n        }\n        \n        return visited.size()==rooms.size();\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"keys-and-rooms"}