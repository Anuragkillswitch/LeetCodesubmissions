{"id":511003087,"lang":"java","time":"1Â month","timestamp":1624261942,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/511003087/","is_pending":"Not Pending","title":"Word Subsets","memory":"N/A","code":" public List<String> wordSubsets(String[] A, String[] B) {\n        List<String> out  = new ArrayList<>();\n        int n = B.length;\n        int[] arr = new int[26]; // least number needed for each letter in a to be subset of any b\n        int i = 0;\n        for(String b : B){\n            int[] brr = new int[26];\n            for(char c: b.toCharArray()){\n                brr[c-'a']++;\n                arr[c-'a'] = Math.max(arr[c-'a'], brr[c-'a']);\n            }\n        }\n        // System.out.println(Arrays.toString(arr));\n        for(String a: A){\n            int[] arr2 = new int[26];\n            for(char c: a.toCharArray()){\n                arr2[c-'a']++;\n            }\n            boolean f = true;\n           for(i=0;i<26;i++){\n                if(arr[i]>0 && arr2[i]<arr[i]){\n                    f = false;\n                    break;\n                }\n            } \n            if(f)\n                out.add(a);\n        }\n        return out;\n        \n    }","compare_result":null,"title_slug":"word-subsets"}