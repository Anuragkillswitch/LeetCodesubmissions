{"id":527108640,"lang":"java","time":"1 day, 16 hours","timestamp":1627053103,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/527108640/","is_pending":"Not Pending","title":"Binary Tree Pruning","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode pruneTree(TreeNode root) {\n        return containsOne(root)?root:null;\n    }\n    \n    private boolean containsOne(TreeNode root){\n        if(root==null)return false;\n        \n        boolean left=containsOne(root.left);\n        boolean right=containsOne(root.right);\n        \n        if(!left)root.left=null;\n        if(!right)root.right=null;\n        \n        return root==null || left || right;\n    }\n}","compare_result":"000000100000000000000000000000","title_slug":"binary-tree-pruning"}