{"id":527946754,"lang":"java","time":"38Â minutes","timestamp":1627196307,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/527946754/","is_pending":"Not Pending","title":"Merge Sorted Array","memory":"39.1 MB","code":"class Solution {\n    public void merge(int[] nums1, int m, int[] nums2, int n) {\n        int i=0;\n        int j=0;\n        int[] e=new int[m+n];\n        int k=0;\n        while(i<m && j<n)\n        {\n            if(nums1[i]>nums2[j])\n            {\n                e[k++]=nums2[j++];\n            }else\n                e[k++]=nums1[i++];\n        }\n        \n        if(i==m && j==n)\n            { for(int b=0;b<m+n;b++)\n                 nums1[b]=e[b];return;}\n        else if(i==m)\n        {\n            for(int p=j;p<n;p++)\n                e[k++]=nums2[p];\n        }else\n        {\n            for(int p=i;p<m;p++)\n                e[k++]=nums1[p];\n        }\n        \n        for(int b=0;b<m+n;b++)\n            nums1[b]=e[b];return;\n        \n      \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"merge-sorted-array"}