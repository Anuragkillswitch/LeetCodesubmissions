{"id":504396884,"lang":"java","time":"1 month, 2 weeks","timestamp":1623069798,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/504396884/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"40.5 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeKLists(ListNode[] lists) {\n        PriorityQueue<Integer> minHeap=new PriorityQueue<>();\n        for(ListNode head : lists)\n        {\n            while(head!=null)\n            {\n                minHeap.add(head.val);\n                head=head.next;\n            }\n        }\n        ListNode dummy=new ListNode(-1);\n        ListNode head=dummy;\n        while(!minHeap.isEmpty())\n        {\n            head.next=new ListNode(minHeap.remove());\n            head=head.next;\n        }\n        return dummy.next;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-k-sorted-lists"}