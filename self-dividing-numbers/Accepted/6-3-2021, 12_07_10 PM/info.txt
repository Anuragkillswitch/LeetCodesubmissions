{"id":502274377,"lang":"java","time":"1 month, 3 weeks","timestamp":1622702230,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/502274377/","is_pending":"Not Pending","title":"Self Dividing Numbers","memory":"36.7 MB","code":"class Solution {\n    \n    public List<Integer> selfDividingNumbers(int left, int right) {\n        List<Integer> l=new ArrayList<>();\n        for(int i=left;i<=right;i++)\n        {\n            \n                \n            if(isSelfDividing(i))\n                l.add(i);\n        }\n        return l;\n    }\n    \n    private boolean isSelfDividing(int num)\n    {\n        int pop = 0, copy = num;\n\n       while(copy > 0) {\n           pop = copy % 10;\n           if(pop==0 || num%pop!=0)\n              return false;\n\n          copy /= 10;\n           }\n\n         return true;\n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"self-dividing-numbers"}