{"id":511002921,"lang":"java","time":"1Â month","timestamp":1624261915,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/511002921/","is_pending":"Not Pending","title":"Word Subsets","memory":"47.4 MB","code":"class Solution {\n    public List<String> wordSubsets(String[] A, String[] B) {\n       List<String> result=new ArrayList<>();\n        int[] target=new int[26];\n        \n        for(String word:B){\n            int[] temp=new int[26];\n            for(char ch:word.toCharArray()){\n                temp[ch-'a']++;\n                target[ch-'a']=Math.max(target[ch-'a'],temp[ch-'a']);\n            }\n        }\n        \n        for(String word:A){\n            int[] source=new int[26];\n            for(char ch:word.toCharArray()){\n                source[ch-'a']++;\n            }\n            \n            if(subset(source,target)){\n                result.add(word);\n            }\n        }\n        \n        return result;\n    }\n    \n    private boolean subset(int[] parent,int[] child){\n        for(int i=0;i<26;i++){\n            if(parent[i]<child[i]) return false;\n        }\n        return true;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"word-subsets"}