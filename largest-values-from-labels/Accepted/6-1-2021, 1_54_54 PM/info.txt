{"id":501268192,"lang":"java","time":"1 month, 3 weeks","timestamp":1622535894,"status_display":"Accepted","runtime":"29 ms","url":"/submissions/detail/501268192/","is_pending":"Not Pending","title":"Largest Values From Labels","memory":"49.8 MB","code":"class Solution {\n\n    public int largestValsFromLabels(int[] values, int[] labels, int num_wanted, int use_limit) {\n        int[][] arr = new int[values.length][2];\n\n        for (int i = 0; i < values.length; i++) {\n            arr[i][0] = values[i];\n            arr[i][1] = labels[i];\n        }\n\n        Arrays.sort(arr, new Comparator<int[]>() {\n            @Override\n            public int compare(int[] x, int[] y) {\n                return -(x[0] - y[0]);\n            }\n        });\n\n        Map<Integer, Integer> labelMap = new HashMap<>();\n        int sum = 0;\n        int numCount = 0;\n\n        for (int i = 0; i < arr.length; i++) {\n            if (labelMap.containsKey(arr[i][1]) && labelMap.get(arr[i][1]) == use_limit) {\n                continue;\n            }\n\n            labelMap.put(arr[i][1], labelMap.getOrDefault(arr[i][1], 0) + 1);\n            sum += arr[i][0];\n            numCount++;\n\n            if (numCount == num_wanted) break;\n        }\n        return sum;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-values-from-labels"}