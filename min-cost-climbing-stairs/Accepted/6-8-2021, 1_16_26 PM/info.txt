{"id":504821565,"lang":"java","time":"1Â month, 2Â weeks","timestamp":1623138386,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/504821565/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"38.8 MB","code":"class Solution {\n    public int minCostClimbingStairs(int[] cost) {\n        int step1=0;\n        int step2=0;\n        \n        for(int i=cost.length-1;i>=0;i--)\n        {\n            int Current_Step=cost[i]+Math.min(step1,step2);\n            step1=step2;\n            step2=Current_Step;\n        }\n        \n        return Math.min(step1,step2);\n    }\n}\n\n//     public int minCostClimbingStairs(int[] cost) {\n//         for(int i=2;i<cost.length;i++)\n//             cost[i]+=Math.min(cost[i-1],cost[i-2]);\n        \n//         return Math.min(cost[cost.length-1],cost[cost.length-2]);\n//     }","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"min-cost-climbing-stairs"}