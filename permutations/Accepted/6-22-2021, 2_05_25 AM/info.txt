{"id":511265460,"lang":"java","time":"1Â month","timestamp":1624307725,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/511265460/","is_pending":"Not Pending","title":"Permutations","memory":"39.6 MB","code":"class Solution {\n    public List<List<Integer>> permute(int[] nums) {\n        List<List<Integer>> result=new ArrayList<>();\n        \n        helper(nums,result,0);\n        return result;\n    }\n    \n    private void helper(int[] nums,List<List<Integer>> result,int index)\n    {\n        if(index==nums.length)\n        {\n            List<Integer> current=new ArrayList<>();\n            \n            for(int i=0;i<nums.length;i++)\n                current.add(nums[i]);\n            \n            result.add(current);\n            return;\n        }\n        \n        for(int j=index;j<nums.length;j++)\n        {\n            int temp=nums[j];\n            nums[j]=nums[index];\n            nums[index]=temp;\n            \n            helper(nums,result,index+1);\n            \n            temp=nums[j];\n            nums[j]=nums[index];\n            nums[index]=temp;\n        }\n    }\n}","compare_result":"11111111111111111111111111","title_slug":"permutations"}