{"id":510462112,"lang":"java","time":"1Â month","timestamp":1624164209,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/510462112/","is_pending":"Not Pending","title":"Combinations","memory":"40.4 MB","code":"class Solution {\n    public List<List<Integer>> combine(int n, int k) {\n        List<List<Integer>> result = new ArrayList<List<Integer>>();        \n        findCombination(n, k, 0, new ArrayList<Integer>(), result);\n        return result;\n    }\n    \n    public void findCombination(int n, int k, int num, ArrayList<Integer> combination, List<List<Integer>> result){\n        \n        if(combination.size()==k){\n            result.add(new ArrayList<Integer>(combination));\n            return;\n        }\n        \n        for(int i=num+1; i<=n; i++){\n            combination.add(i);\n            findCombination(n, k, i, combination, result); //Simulating taking all of the numbers from the next number\n            combination.remove(combination.size()-1);\n        }\n    }\n}","compare_result":"111111111111111111111111111","title_slug":"combinations"}