{"id":511580433,"lang":"java","time":"1Â month","timestamp":1624366351,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/511580433/","is_pending":"Not Pending","title":"Pseudo-Palindromic Paths in a Binary Tree","memory":"66.3 MB","code":"class Solution {\nint totalPalindrominPaths;\npublic int pseudoPalindromicPaths (TreeNode root) {\nthis.totalPalindrominPaths = 0;\nfindTotalPalidromicPaths(root,new int[10]);\nreturn totalPalindrominPaths;\n}\n\nprivate void findTotalPalidromicPaths(TreeNode root, int[] countSoFar) {\n    if(root==null) return;\n    countSoFar[root.val]++;\n    if(root.left==null && root.right==null){\n        if(checkIfPal(countSoFar)) this.totalPalindrominPaths++;\n        countSoFar[root.val]--;\n        return;\n    }\n    findTotalPalidromicPaths(root.left,countSoFar);\n    findTotalPalidromicPaths(root.right,countSoFar);\n    countSoFar[root.val]--;\n}\n\nprivate boolean checkIfPal(int[] arr){\n    boolean hasOdd = false;\n    for(int i=1;i<10;i++){\n        if(arr[i]%2==0) continue;\n        if(hasOdd) return false;\n        hasOdd = true;\n    }\n    return true;\n}\n}","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"pseudo-palindromic-paths-in-a-binary-tree"}