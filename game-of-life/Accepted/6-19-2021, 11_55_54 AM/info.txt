{"id":510006374,"lang":"java","time":"1Â month","timestamp":1624083954,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/510006374/","is_pending":"Not Pending","title":"Game of Life","memory":"37.4 MB","code":"class Solution {\n    public void gameOfLife(int[][] board) {\n        int[][] directions=new int[][]{{-1,-1},{-1,0},{-1,1},{1,1},{0,1},{1,-1},{0,-1},{1,0}};\n        //int[][] nextState=new int[board.length][board[0].length];\n        \n        for(int i=0;i<board.length;i++)\n        {\n            for(int j=0;j<board[i].length;j++)\n            {\n                int LiveNeighbours=0;\n                \n                for(int[] direction : directions)\n                {\n                    int index=i+direction[0];\n                    int jindex=j+direction[1];\n                    if(index>=0 && index<board.length && jindex>=0 && jindex<board[0].length && (board[index][jindex]==1 || board[index][jindex]==5))LiveNeighbours++;\n                }\n                \n                if(board[i][j]==1)\n                {\n                    if(LiveNeighbours<2 || LiveNeighbours>3)board[i][j]=5;//Live to dead 5\n                    \n                }else\n                {\n                    if(LiveNeighbours==3)board[i][j]=3;//Dead to live\n                }\n            }\n        }\n        \n        for(int i=0;i<board.length;i++)\n        {\n            for(int j=0;j<board[i].length;j++)\n            {\n                if(board[i][j]==5)board[i][j]=0;\n                if(board[i][j]==3)board[i][j]=1;\n            }\n        }\n    }\n}","compare_result":"1111111111111111111111","title_slug":"game-of-life"}