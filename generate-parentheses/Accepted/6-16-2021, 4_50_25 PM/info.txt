{"id":508736610,"lang":"java","time":"1 month, 1 week","timestamp":1623842425,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/508736610/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"38.8 MB","code":"class Solution {\n    public List<String> generateParenthesis(int n) {\n        List<String> outputArray=new ArrayList();\n        \n        backtrack(outputArray,\"\",0,0,n);\n        return outputArray;\n    }\n    \n    private void backtrack(List<String> outputArray,String CurrentString,int open,int close,int max)\n    {\n        if(CurrentString.length()==max*2)\n        {\n            outputArray.add(CurrentString);\n            return;\n        }\n        \n        if(open<max)backtrack(outputArray,CurrentString+\"(\",open+1,close,max);\n        if(close<open)backtrack(outputArray,CurrentString+\")\",open,close+1,max);\n        \n        return;\n    }\n}","compare_result":"11111111","title_slug":"generate-parentheses"}