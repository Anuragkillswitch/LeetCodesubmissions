{"id":507679934,"lang":"java","time":"1 month, 1 week","timestamp":1623654483,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/507679934/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"38.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public void flatten(TreeNode root) {\n         TreeNode temp;\n        if(root==null || (root.left==null && root.right==null))\n            return ;\n        flatten(root.left);\n        flatten(root.right);\n        if(root.left==null)\n            return ;\n        temp=root.left;\n        while(temp.right!=null)\n            temp=temp.right;\n        temp.right=root.right;\n        root.right=root.left;\n        root.left=null;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list"}