{"id":493174674,"lang":"java","time":"2 months, 1 week","timestamp":1621020662,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/493174674/","is_pending":"Not Pending","title":"String Compression","memory":"38.9 MB","code":"class Solution {\n    public int compress(char[] chars) {\n        \n    \n        int index=0;\n        int i=0;\n        while(i<chars.length)\n        {\n            int j=i;\n            while(j<chars.length && chars[j]==chars[i] )\n            {\n                j++;\n            }\n              chars[index++]=chars[i];\n              if(j-i>1)\n              {\n                  String count=j-i+\"\";\n                  //Now we have to go through every character in the count \n                  //to account for multiple digit long frequency\n                  for(char c : count.toCharArray())\n                  {\n                       chars[index++]=c;\n                  }\n                  \n                      \n              }\n            i=j;\n        }\n        return index;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"string-compression"}