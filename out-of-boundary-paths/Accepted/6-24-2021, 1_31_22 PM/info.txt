{"id":512462975,"lang":"java","time":"1Â month","timestamp":1624521682,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/512462975/","is_pending":"Not Pending","title":"Out of Boundary Paths","memory":"37.8 MB","code":"class Solution {\n  public int findPaths(int m, int n, int N, int x, int y) {\n    int M = 1000000000 + 7;\n    int dp[][] = new int[m][n];\n    dp[x][y] = 1;\n    int count = 0;\n    for (int moves = 1; moves <= N; moves++) {\n      int[][] temp = new int[m][n];\n      for (int i = 0; i < m; i++) {\n        for (int j = 0; j < n; j++) {\n          if (i == m - 1) count = (count + dp[i][j]) % M;\n          if (j == n - 1) count = (count + dp[i][j]) % M;\n          if (i == 0) count = (count + dp[i][j]) % M;\n          if (j == 0) count = (count + dp[i][j]) % M;\n          temp[i][j] = (\n              ((i > 0 ? dp[i - 1][j] : 0) + (i < m - 1 ? dp[i + 1][j] : 0)) % M +\n              ((j > 0 ? dp[i][j - 1] : 0) + (j < n - 1 ? dp[i][j + 1] : 0)) % M\n          ) % M;\n        }\n      }\n      dp = temp;\n    }\n    return count;\n  }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"out-of-boundary-paths"}