{"id":493936529,"lang":"c","time":"2 months, 1 week","timestamp":1621164947,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/493936529/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"6.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     struct TreeNode *left;\n *     struct TreeNode *right;\n * };\n */\n// Recursive solution\nbool isSymmetricRecursion(struct TreeNode* left,struct TreeNode* right)\n{\n    if(left==NULL || right==NULL)\n        return (left==right);\n    \n    if(left->val!=right->val)\n        return false;\n    \n    return isSymmetricRecursion(left->left,right->right) && isSymmetricRecursion(left->right,right->left);\n        \n}\n\nbool isSymmetric(struct TreeNode* root){\n    if(root==NULL)\n        return true;\n    \n    return isSymmetricRecursion(root->left,root->right);\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}