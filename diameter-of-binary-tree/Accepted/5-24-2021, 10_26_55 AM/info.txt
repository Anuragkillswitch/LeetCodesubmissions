{"id":497445639,"lang":"java","time":"2Â months","timestamp":1621832215,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/497445639/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"39 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int ans=0;\n    public int diameterOfBinaryTree(TreeNode root) {\n        getDiameter(root);\n       \n         return (ans==0)?0:ans-1;  //No. of edges is nodes-1\n    }\n    \n    public int getDiameter(TreeNode root)\n    {\n        if(root==null)\n            return 0;\n        \n        int l=getDiameter(root.left);\n        int r=getDiameter(root.right);\n        \n        ans=Math.max(ans,l+r+1);   // +1 because including this current node\n        \n        return Math.max(l,r)+1;\n    }\n    \n    \n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree"}