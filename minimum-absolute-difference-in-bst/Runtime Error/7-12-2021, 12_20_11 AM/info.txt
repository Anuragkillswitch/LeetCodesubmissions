{"id":520934176,"lang":"c","time":"1 week, 6 days","timestamp":1626029411,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/520934176/","is_pending":"Not Pending","title":"Minimum Absolute Difference in BST","memory":"N/A","code":"int minfour(int a, int b, int c, int d) {\n    int min = INT_MAX;\n    if(min > a && a > 0){\n        min = a;\n    }\n    if(min > b && b > 0) {\n        min = b;\n    }\n    if(min > c && c > 0) {\n        min = c;\n    }\n    if(min > d && d > 0) {\n        min = d;\n    }\n    return min;\n}\n\nint helper(struct TreeNode *root, int *min, int *max) {\n    \n    if(!root) {\n        *min = INT_MAX;\n        *max = INT_MIN;\n        return INT_MAX;\n    }\n    \n    if (!(root->left) && !(root->right)) {\n        *min = root->val;\n        *max = root->val;\n        return INT_MAX;\n    }\n    \n    int min_l, max_l;\n    int min_r, max_r;\n    \n    int l_res = helper(root->left, &min_l, &max_l);\n    int r_res = helper(root->right, &min_r, &max_r);\n    \n    \n    *min = (min_l < root->val ? min_l : root->val);\n    *max = (max_r > root->val ? max_r : root->val);\n\n    //Note : abs(max_l - root->val) or abs(min_r - root->val) will over flow if there was no left or right child\n    //So check that the result is > than 0 in minfour function\n    return minfour(abs(max_l - root->val), abs(min_r - root->val), l_res, r_res);\n    \n}\n\nint getMinimumDifference(struct TreeNode* root) {\n    \n    int min = INT_MAX;\n    int max = INT_MIN;\n    return helper(root, &min, &max);\n}","compare_result":"11000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"minimum-absolute-difference-in-bst"}