{"id":520941788,"lang":"java","time":"1 week, 6 days","timestamp":1626030551,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/520941788/","is_pending":"Not Pending","title":"Find Bottom Left Tree Value","memory":"38.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int findBottomLeftValue(TreeNode root) {\n        Queue<TreeNode> q=new LinkedList<>();\n        q.offer(root);\n        \n        while(!q.isEmpty())\n        {\n            root=q.poll();\n            \n            if(root.right!=null)q.offer(root.right);\n            if(root.left!=null)q.offer(root.left);\n        }\n        \n        //LAST THING TO BE POLLED FROM YTHE QUEUE WOUL DBE THE LEFT M OSYT NODE\n\n        return root.val;\n    }\n}\n//FUCK YOU BITCH","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-bottom-left-tree-value"}