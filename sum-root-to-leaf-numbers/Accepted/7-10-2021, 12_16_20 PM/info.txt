{"id":520136764,"lang":"java","time":"2 weeks, 1 day","timestamp":1625899580,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/520136764/","is_pending":"Not Pending","title":"Sum Root to Leaf Numbers","memory":"38.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int sumNumbers(TreeNode root) {\n   \n        \n        return sumNumbers(root,0); // 0 is the current sum\n    }\n    private int sumNumbers(TreeNode root,int sumSoFar)\n    {\n        if(root==null)return 0;//Didn't find a path\n        \n        sumSoFar*=10;\n        sumSoFar+=root.val;\n        if(root.left==null && root.right==null)//leaf node\n        {\n            return sumSoFar;\n        }\n        \n        return sumNumbers(root.left,sumSoFar)+sumNumbers(root.right,sumSoFar);\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-root-to-leaf-numbers"}