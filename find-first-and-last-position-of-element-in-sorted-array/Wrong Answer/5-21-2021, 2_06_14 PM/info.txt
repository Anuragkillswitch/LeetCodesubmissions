{"id":496169020,"lang":"java","time":"2Â months","timestamp":1621586174,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/496169020/","is_pending":"Not Pending","title":"Find First and Last Position of Element in Sorted Array","memory":"N/A","code":"class Solution {\n    public int[] searchRange(int[] nums, int target) {\n        int[] pos=new int[2];\n        \n       pos[0]=FindStartingIndex(nums,target);\n       pos[1]=FindEndingIndex(nums,target);\n        \n        return pos;\n        \n    }\n    \n    public int FindStartingIndex(int[] nums,int target)\n    {\n        int index=-1;\n        int start=0;\n        int end=nums.length-1;\n        \n        while(start<=end)\n        {\n            int mid=start+(end-start)/2;    //To avoid integer overflow in some languages\n            \n          \n            \n            if(nums[mid]>=target)\n            {\n                end=mid-1;\n                \n            }else\n            {\n                start=mid+1;\n            }\n            \n              if(nums[mid]==target)\n                index=mid;\n            \n         }\n        \n        return index;\n        \n    }\n    \n    public int FindEndingIndex(int[] nums,int target)\n    {\n        int index=-1;\n        int start=0;\n        int end=nums.length-1;\n        \n        while(start<=end)\n        {\n            int mid=start+(end-start)/2;    //To avoid integer overflow in some languages\n            \n            if(nums[mid]<=target)\n            {\n                start=mid+1;\n            }{\n                end=mid-1;\n            }\n            \n            \n            \n            \n            if(nums[mid]==target)\n                index=mid;\n         }\n        \n        return index;\n    }\n}","compare_result":"0111111010111010100111110010011100000011000000000000001010101010010000100000000000000000","title_slug":"find-first-and-last-position-of-element-in-sorted-array"}