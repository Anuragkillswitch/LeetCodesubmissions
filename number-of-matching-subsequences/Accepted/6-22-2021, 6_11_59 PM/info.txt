{"id":511577286,"lang":"java","time":"1Â month","timestamp":1624365719,"status_display":"Accepted","runtime":"99 ms","url":"/submissions/detail/511577286/","is_pending":"Not Pending","title":"Number of Matching Subsequences","memory":"40 MB","code":"class Solution {\npublic int numMatchingSubseq(String s, String[] words) {\n\n    if(s.length()==0) return 1;\n    if(words.length==0) return 0;\n    \n    int count = 0;\n    HashMap<String,Boolean> hm = new HashMap<>();\n    \n    \n    for(int i=0;i<words.length;i++)\n    {\n        if(hm.containsKey(words[i]))\n        {\n            boolean flag = hm.get(words[i]);\n            if(flag==true) count++;\n        }\n        \n        else\n        {\n            if(IsSubsequence(s,words[i]))\n            {\n                hm.put(words[i],true);\n                count++;\n            }\n            else\n            {\n                hm.put(words[i],false);\n            }\n        }\n        \n    }\n    \n    return count;\n    \n}\n\npublic static boolean IsSubsequence(String t,String s)\n{\n    if (t.length()==0) return false;\n    if(s.length()==0) return true;\n    \n    if(s.length()>t.length()) return false;\n    \n    int sidx = 0 , tidx = 0;\n    \n    for(int i=tidx;i<t.length() && sidx<s.length();i++)\n    {\n        \n        if(t.charAt(i)==s.charAt(sidx)) sidx++ ;\n    }\n    \n    if(sidx==s.length()) return true;\n    \n    return false;\n}\n}","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"number-of-matching-subsequences"}