{"id":512471901,"lang":"java","time":"1Â month","timestamp":1624523352,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/512471901/","is_pending":"Not Pending","title":"Univalued Binary Tree","memory":"36.5 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isUnivalTree(TreeNode root) {\n        if(root==null)return true;\n        int val=root.val;\n        return isUnival(root.left,val)&&isUnival(root.right,val);\n    }\n    \n    private boolean isUnival(TreeNode root,int val)\n    {\n        if(root==null)return true;\n        \n        boolean isValid=(root.val==val);\n        \n        return isValid&&isUnival(root.left,val)&&isUnival(root.right,val);\n    }\n    }\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"univalued-binary-tree"}