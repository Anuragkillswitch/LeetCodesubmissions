{"id":501867405,"lang":"java","time":"1 month, 3 weeks","timestamp":1622637141,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/501867405/","is_pending":"Not Pending","title":"Interleaving String","memory":"38.9 MB","code":"class Solution {\npublic boolean isInterleave(String s1, String s2, String s3) {\n        int m = s1.length(), n = s2.length(), l = s3.length();\n        if (m + n != l) return false;\n        boolean[][] dp = new boolean[m + 1][n + 1];\n        dp[0][0] = true;\n        for (int i = 0; i < m; i++) {\n            dp[i+1][0] = dp[i][0] && s1.charAt(i) == s3.charAt(i);\n        }\n        \n        for (int i = 0; i < n; i++) {\n            dp[0][i+1] = dp[0][i] && s2.charAt(i) == s3.charAt(i);\n        }\n        \n        for (int i = 0; i <= m; i++) {\n            for (int j = 0; j <= n; j++) {\n                if (i * j == 0) continue;\n                if (s3.charAt(i + j - 1) == s1.charAt(i - 1)) dp[i][j] = dp[i][j] || dp[i - 1][j];\n                if (s3.charAt(i + j - 1) == s2.charAt(j - 1)) dp[i][j] = dp[i][j] || dp[i][j - 1];\n            }\n        }\n        return dp[m][n];\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"interleaving-string"}