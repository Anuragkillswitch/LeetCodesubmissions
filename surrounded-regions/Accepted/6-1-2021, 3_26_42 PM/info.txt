{"id":501296199,"lang":"java","time":"1 month, 3 weeks","timestamp":1622541402,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/501296199/","is_pending":"Not Pending","title":"Surrounded Regions","memory":"40.8 MB","code":"class Solution {\n    public void solve(char[][] board) {\n        //We first traverse the boundaries and whenever we encounter a O\n        //We will turn the entire region with a special character * ,Like it's now a fortress\n        //And it won't be captured by X\n        \n        for(int i=0;i<board.length;i++)\n        {\n            if(board[i][0]=='O')\n                 dfs(board,i,0);\n            if(board[i][board[i].length-1]=='O')\n                 dfs(board,i,board[i].length-1);\n        }\n          for(int i=0;i<board[0].length;i++)\n        {\n            if(board[0][i]=='O')\n                 dfs(board,0,i);\n            if(board[board.length-1][i]=='O')\n                 dfs(board,board.length-1,i);\n        }\n        \n        for(int i=0;i<board.length;i++)\n        {\n            for(int j=0;j<board[i].length;j++)\n            {\n                if(board[i][j]=='O')\n                    board[i][j]='X';\n                if(board[i][j]=='*')\n                     board[i][j]='O';\n            }\n        }\n    }\n    \n    private void dfs(char[][] board,int i,int j)\n    {\n        if(i<0 || i>board.length-1 || j<0 || j>board[0].length-1 || board[i][j]!='O')\n             return;\n        \n        if(board[i][j]=='O')board[i][j]='*'; //Brick in our fortress\n        \n        \n        dfs(board,i+1,j);\n        dfs(board,i-1,j);\n        dfs(board,i,j+1);\n        dfs(board,i,j-1);\n        return;\n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"surrounded-regions"}