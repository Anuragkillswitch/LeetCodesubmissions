{"id":492228982,"lang":"java","time":"2 months, 1 week","timestamp":1620832567,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/492228982/","is_pending":"Not Pending","title":"Number of Islands","memory":"41.4 MB","code":"class Solution {\n    public int numIslands(char[][] grid) {\n        if(grid==null || grid.length==0)\n            return 0;\n        \n        int numIslands=0;\n        \n        for(int i=0;i<grid.length;i++)\n        {\n            for(int j=0;j<grid[i].length;j++)\n            {\n                if(grid[i][j]=='1')\n                {\n                    numIslands+=dfs(grid,i,j);\n                    \n                }\n            }\n        }\n        return numIslands;\n    }\n    \n    \n    public int dfs(char[][] grid,int i,int j)\n    {\n        if(i<0 || i>=grid.length || j<0 || j>=grid[i].length || grid[i][j]=='0') //Out of bounds\n             return 0;  //Or Zero\n    \n    \n             grid[i][j] = '0';\n    \n             dfs(grid,i+1,j);\n             dfs(grid,i-1,j);\n             dfs(grid,i,j+1);\n             dfs(grid,i,j-1);\n    \n                return 1; \n    }\n       \n}     ","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"number-of-islands"}