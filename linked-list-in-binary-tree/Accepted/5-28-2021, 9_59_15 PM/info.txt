{"id":499497824,"lang":"java","time":"1 month, 3 weeks","timestamp":1622219355,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/499497824/","is_pending":"Not Pending","title":"Linked List in Binary Tree","memory":"39.2 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isSubPath(ListNode head, TreeNode root) {\n        if(root==null)\n            return false; //If the list is null \n        \n        if(Match(head,root)) return true;\n        \n        return isSubPath(head,root.left) || isSubPath(head,root.right);\n    }\n    \n    \n//     private boolean dfs(ListNode head,TreeNode root)\n//     {\n//         if(root==null)\n//             return false; //If the list is null \n        \n//         if(Match(head,root)) return true;\n        \n//         return dfs(head,root.left) || dfs(head,root.right);\n        \n        \n//     }\n    \n    private boolean Match(ListNode head,TreeNode root)\n    {\n        if(head==null)\n            return true;\n        if(root==null || root.val!=head.val)\n            return false;\n        \n        return Match(head.next,root.left) || Match(head.next,root.right);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"linked-list-in-binary-tree"}