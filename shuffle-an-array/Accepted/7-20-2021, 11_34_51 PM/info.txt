{"id":525615053,"lang":"java","time":"4 days, 13 hours","timestamp":1626804291,"status_display":"Accepted","runtime":"75 ms","url":"/submissions/detail/525615053/","is_pending":"Not Pending","title":"Shuffle an Array","memory":"47.5 MB","code":"class Solution {\n     private int[] nums;\n     private Random random;\n    public Solution(int[] nums) {\n        this.nums=nums;\n        this.random=new Random();\n    }\n    \n    /** Resets the array to its original configuration and return it. */\n    public int[] reset() {\n        return nums;\n    }\n    \n    /** Returns a random shuffling of the array. */\n    public int[] shuffle() {\n        int[] copy=nums.clone();\n        for(int i=nums.length-1;i>0;i--){\n            int j=random.nextInt(i+1);\n            int t=copy[i];\n            copy[i]=copy[j];\n            copy[j]=t;\n        }\n        return copy;\n    }\n}\n\n/**\n * Your Solution object will be instantiated and called as such:\n * Solution obj = new Solution(nums);\n * int[] param_1 = obj.reset();\n * int[] param_2 = obj.shuffle();\n */","compare_result":"1111111111","title_slug":"shuffle-an-array"}