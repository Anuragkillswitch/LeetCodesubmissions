{"id":519331361,"lang":"java","time":"2 weeks, 2 days","timestamp":1625757297,"status_display":"Accepted","runtime":"48 ms","url":"/submissions/detail/519331361/","is_pending":"Not Pending","title":"Maximum Length of Repeated Subarray","memory":"47.9 MB","code":"class Solution {\n    public int findLength(int[] nums1, int[] nums2) {\n        int n=nums1.length,n2=nums2.length,m=0;\n        int a[][]=new int[n][n2];\n        for(int i=0;i<n;i++)\n        {\n            for(int j=0;j<n2;j++)\n            {\n                if(i==0||j==0)\n                {\n                    if(nums1[i]==nums2[j]){\n                        a[i][j]=1;\n                    m=Math.max(m,a[i][j]);}\n                    else\n                        a[i][j]=0;\n                }\n                else\n                {\n                    if(nums1[i]==nums2[j]){\n                        a[i][j]=a[i-1][j-1]+1;\n                       \n                    m=Math.max(m,a[i][j]);}\n                    else\n                        a[i][j]=0;\n                }\n            }\n        }\n        return m;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"maximum-length-of-repeated-subarray"}