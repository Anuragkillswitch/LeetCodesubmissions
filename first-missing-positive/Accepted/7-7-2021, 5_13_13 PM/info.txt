{"id":518741420,"lang":"java","time":"2 weeks, 3 days","timestamp":1625658193,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/518741420/","is_pending":"Not Pending","title":"First Missing Positive","memory":"86.3 MB","code":"class Solution {\n    public int firstMissingPositive(int[] nums) {\n        int n=nums.length;\n        \n        for(int i=0;i<n;i++)\n        {\n            int correctPosition=nums[i]-1;\n            \n            while(1<=nums[i]&& nums[i]<=n && nums[i]!=nums[correctPosition])\n            {\n                nums[i]=nums[i]+nums[correctPosition];\n                nums[correctPosition]=nums[i]-nums[correctPosition];\n                nums[i]=nums[i]-nums[correctPosition];\n                correctPosition=nums[i]-1;\n            }\n        }\n        \n        \n        for(int i=0;i<n;i++)\n        {\n            if(i+1!=nums[i])\n                return i+1;\n        }\n        \n        return n+1;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"first-missing-positive"}