{"id":498919105,"lang":"java","time":"1 month, 4 weeks","timestamp":1622104155,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/498919105/","is_pending":"Not Pending","title":"Univalued Binary Tree","memory":"36.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isUnivalTree(TreeNode root) {\n   \n        \n        return isUnival(root.left,root.val) && isUnival(root.right,root.val);\n    }\n    \n    private boolean isUnival(TreeNode root,int val)\n    {\n        if(root==null)\n            return true;\n        if(root.val!=val)\n            return false;\n        \n        return isUnival(root.left,val) && isUnival(root.right,val);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"univalued-binary-tree"}