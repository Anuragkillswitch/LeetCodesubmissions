{"id":501482988,"lang":"java","time":"1 month, 3 weeks","timestamp":1622570918,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/501482988/","is_pending":"Not Pending","title":"Even Odd Tree","memory":"95 MB","code":"class Solution {\n    public boolean isEvenOddTree(TreeNode root) {\n        if(root==null)\n            return true;\n        Queue<TreeNode> q=new LinkedList<>();\n        q.add(root);\n        boolean evenlevel=true;\n        \n        while(!q.isEmpty())\n        {\n            int size=q.size();\n            int prev = evenlevel ? Integer.MIN_VALUE : Integer.MAX_VALUE;//if even level strictly increasing order else strictly decreasing order\n            while(size-- > 0)\n            {\n                root=q.poll();\n                if(evenlevel && (prev >= root.val || root.val % 2==0))\n                    //if incase its in even level but doesnt satisy the 2 conditions,that is,if it isnt odd number or not in strictly increasing order then false\n                    return false;\n                 if(!evenlevel && (prev <= root.val || root.val % 2==1))\n                    //if incase its in odd level but doesnt satisy the 2 conditions,that is,if it isnt even number or not in strictly decreasing order then false\n                    return false;\n                prev=root.val;\n                if(root.left!=null)\n                    q.add(root.left);\n                if(root.right!=null)\n                    q.add(root.right);\n            }\n            evenlevel=!evenlevel;\n       }\n        return true;\n  }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"even-odd-tree"}