{"id":504570167,"lang":"java","time":"1 month, 2 weeks","timestamp":1623095120,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/504570167/","is_pending":"Not Pending","title":"Longest Consecutive Sequence","memory":"59.1 MB","code":"class Solution {\n    public int longestConsecutive(int[] nums) {\n        HashSet<Integer> unique = new HashSet<>();\n        for(int i: nums) unique.add(i);\n        int max = 0;\n        for(int i: nums) {\n\t\t\t// perform DFS at each unique value\n            max = Math.max(max, dfs(i, unique));\n        }\n        return max;\n    }\n    \n    public int dfs(int cur, HashSet<Integer> unique) {\n\t\t// do not recalculate values that have been traversed\n        if(!unique.contains(cur)) return 0;\n        int upper = cur + 1;\n        int lower = cur -1;\n\t\t\n\t\t// explore values immediately greater than cur\n        while(unique.contains(upper)) {\n            unique.remove(upper);\n            upper += 1;\n        }\n\t\t\n\t\t// explore values immediately less than cur\n        while(unique.contains(lower)) {\n            unique.remove(lower);\n            lower -= 1;\n        }\n        \n        return upper - lower - 1;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-consecutive-sequence"}