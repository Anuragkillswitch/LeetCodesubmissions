{"id":510127894,"lang":"java","time":"1Â month","timestamp":1624107956,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/510127894/","is_pending":"Not Pending","title":"Combination Sum III","memory":"36.9 MB","code":"class Solution {\n    public List<List<Integer>> combinationSum3(int k, int n) {\n        List<Integer> l = new ArrayList<Integer>();\n\t\tList<List<Integer>> list = new ArrayList<List<Integer>>();\n\t\tif(n==0||k==0)\n            return list;\n        combination(k, n, l, list, 0, 1);\n\t\treturn list;\n    }\n    private  void combination(int k, int n, List<Integer> l, List<List<Integer>> list, int sum, int lastused) {\n\t\tif (l.size() == k && sum == n) {\n\t\t\tlist.add(new ArrayList<Integer>(l));\n\t\t\tl = new ArrayList<Integer>();\n\t\t\treturn;\n\t\t}\n\t\tif (l.size() > k)\n\t\t\treturn;\n\t\tfor (int i = lastused; i < 10; i++) {\n\t\t\tl.add(i);\n\t\t\tsum += i;\n\t\t\tcombination(k, n, l, list, sum, i + 1);\n\t\t\tl.remove(l.size() - 1);\n\t\t\tsum -= i;\n\t\t}\n\t}\n}","compare_result":"111111111111111111","title_slug":"combination-sum-iii"}