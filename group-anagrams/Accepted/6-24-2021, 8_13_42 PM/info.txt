{"id":512583621,"lang":"java","time":"1Â month","timestamp":1624545822,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/512583621/","is_pending":"Not Pending","title":"Group Anagrams","memory":"42.3 MB","code":"class Solution {\n    public List<List<String>> groupAnagrams(String[] strs) {\n     List<List<String>> groupedAnagrams=new ArrayList<>();\n        \n     HashMap<String,List<String>> map=new HashMap<>();\n        \n        for(String str : strs)\n        {\n            char[] cur=str.toCharArray();\n            Arrays.sort(cur);\n            String sorted=new String(cur);\n            if(!map.containsKey(sorted))\n            {\n                map.put(sorted,new ArrayList<>());\n                \n            }\n            \n            map.get(sorted).add(str);\n        }\n        \n        \n     groupedAnagrams.addAll(map.values());\n        \n        return groupedAnagrams;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-anagrams"}