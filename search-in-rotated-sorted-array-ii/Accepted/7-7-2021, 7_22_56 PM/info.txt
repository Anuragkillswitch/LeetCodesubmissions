{"id":518783962,"lang":"java","time":"2 weeks, 3 days","timestamp":1625665976,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/518783962/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array II","memory":"38.9 MB","code":"class Solution {\n  public boolean search(int[] nums, int target) {\n    if (null == nums || 0 == nums.length)\n      return false;\n    \n    int lo = 0;\n    int hi = nums.length - 1;\n    while (lo <= hi) {\n      // to avoid duplicates\n      while (lo < hi && nums[lo] == nums[lo + 1])\n        ++lo;\n      while (lo < hi && nums[hi] == nums[hi - 1])\n        --hi;\n      \n      // the code below is exactly the same with Problem 33.\n      int mid = lo + (hi - lo) / 2;\n      if (nums[mid] == target)\n        return true;\n      \n      if (nums[mid] >= nums[lo]) {\n        if (target >= nums[lo] && target < nums[mid])\n          hi = mid - 1;\n        else\n          lo = mid + 1;\n      } else {\n        if (target <= nums[hi] && target > nums[mid])\n          lo = mid + 1;\n        else\n          hi = mid - 1;\n      }\n    }\n    \n    return false;\n  }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-in-rotated-sorted-array-ii"}