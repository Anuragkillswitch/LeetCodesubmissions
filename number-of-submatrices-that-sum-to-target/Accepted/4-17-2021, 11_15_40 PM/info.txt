{"id":481815404,"lang":"c","time":"3 months, 1 week","timestamp":1618681540,"status_display":"Accepted","runtime":"164 ms","url":"/submissions/detail/481815404/","is_pending":"Not Pending","title":"Number of Submatrices That Sum to Target","memory":"6.4 MB","code":"\nint numSubmatrixSumTarget(int** matrix, int msize, int* matrixColSize, int target){\n    int rsize = matrixColSize[0];\n    int dp[rsize];\n    int ans = 0;\n    int y = 0;\n\n    while(y < msize){\n\n        memset(dp, 0,  sizeof(int) * rsize); \n\n        for(int row = y; row < msize; row++){\n            for(int col = 0; col < rsize; col++){\n                // Add current column to dp.\n                dp[col] += matrix[row][col];\n            } \n\n            for (int col = 0; col < rsize; col++){\n                // Start at first column and move to last column.\n                int sum = 0;\n                for (int _col = col; _col < rsize; _col++){\n                    // Sum up columns and check if equal to target.\n                    sum += dp[_col];\n                    if (sum == target) ans++;\n                }\n            }\n        } \n        y++;\n    } \n\n    return ans;\n}","compare_result":"1111111111111111111111111111111111111111","title_slug":"number-of-submatrices-that-sum-to-target"}