{"id":526094629,"lang":"java","time":"3 days, 15 hours","timestamp":1626883987,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/526094629/","is_pending":"Not Pending","title":"Minimum Time Difference","memory":"38.5 MB","code":"class Solution {\n    public int findMinDifference(List<String> timePoints) {\n        boolean[] timeSeen=new boolean[24*60]; //All times of the day 0000 to 2359\n        \n        for(String time :  timePoints){\n            String[] curTime=time.split(\":\");\n            int hours=Integer.parseInt(curTime[0])*60;\n            int mins=Integer.parseInt(curTime[1]);\n            if(timeSeen[hours+mins]){\n                return 0;//Two times same so difference in minutes would be 0\n            }\n            timeSeen[hours+mins]=true;\n        }\n        \n        Integer firstTimeSeen=null;\n        Integer previousTimeSeen=null;\n        Integer minimumDifference=Integer.MAX_VALUE;\n        \n        \n        for(int i=0;i<24*60;i++)\n        {\n            if(timeSeen[i]){\n                if(firstTimeSeen==null){\n                    firstTimeSeen=i;\n                    previousTimeSeen=i;\n                }else{\n                    minimumDifference=Math.min(minimumDifference,Math.min(i-previousTimeSeen,1440-i+previousTimeSeen));\n                    //cloclwise and counter clockwise difference\n                    previousTimeSeen=i;\n                }\n            }\n        }\n        \n         minimumDifference=Math.min(minimumDifference,Math.min(previousTimeSeen-firstTimeSeen,1440-previousTimeSeen+firstTimeSeen));\n        \n        \n        return minimumDifference;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-time-difference"}