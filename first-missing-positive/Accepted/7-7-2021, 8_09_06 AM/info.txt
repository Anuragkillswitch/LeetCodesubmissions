{"id":518542989,"lang":"java","time":"2 weeks, 4 days","timestamp":1625625546,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/518542989/","is_pending":"Not Pending","title":"First Missing Positive","memory":"86 MB","code":"class Solution {\npublic int firstMissingPositive(int[] nums) {\n\tvar n = nums.length;\n\tfor (var i = 0; i < nums.length; i++)\n\t\t//  put positives in their right place as long as possible\n\t\twhile (0 <= nums[i] - 1 && nums[i] - 1 < n && nums[i] != nums[nums[i] - 1]) \n\t\t\tswap(nums, nums[i] - 1, i);\n\n\t// scan for first missing positive\n\tfor (var i = 0; i < n; i++)\n\t\tif (nums[i] != i + 1)\n\t\t\treturn i + 1;\n\treturn n + 1;\n}\n\nprivate void swap(int[] nums, int i, int j) {\n\tvar temp = nums[i];\n\tnums[i] = nums[j];\n\tnums[j] = temp;\n}\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"first-missing-positive"}