{"id":501903735,"lang":"java","time":"1 month, 3 weeks","timestamp":1622643033,"status_display":"Accepted","runtime":"27 ms","url":"/submissions/detail/501903735/","is_pending":"Not Pending","title":"Minimum Remove to Make Valid Parentheses","memory":"48.7 MB","code":"class Solution {\n    public String minRemoveToMakeValid(String s) {\n        StringBuilder sb=new StringBuilder();\n        int openingParentheses=0;\n        \n        for(char c : s.toCharArray())\n        {\n            if(c=='(')\n                openingParentheses++;\n            else if(c==')')\n                {if(openingParentheses==0)\n                    continue;\n                openingParentheses--;}\n        \n             sb.append(c);\n        }\n        \n        StringBuilder result=new StringBuilder();\n        \n        for(int i=sb.length()-1;i>=0;i--)\n        {\n            if(sb.charAt(i)=='(' && openingParentheses-->0) continue;\n            result.append(sb.charAt(i));\n        }\n        \n \n        \n        return result.reverse().toString();\n    }\n}\n\n//()( For this we have to remove the  (\n// )( for this we have to remove both of the parentheses\n// ))(( All of these characters gotta go\n","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-remove-to-make-valid-parentheses"}