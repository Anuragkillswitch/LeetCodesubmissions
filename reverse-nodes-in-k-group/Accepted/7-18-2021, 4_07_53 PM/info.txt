{"id":524389471,"lang":"java","time":"6 days, 20 hours","timestamp":1626604673,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/524389471/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"39.6 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseKGroup(ListNode head, int k) {\n        ListNode root=new ListNode(0,head);\n        ListNode cur=head;\n        ListNode prev=root;\n        \n        while(cur!=null)\n        {\n            ListNode tail=cur;\n            int listIndex=0;\n            while(cur!=null && listIndex<k)\n            {\n                cur=cur.next;\n                listIndex++;\n            }\n            \n            if(listIndex!=k){\n                prev.next=tail;\n            }else{\n                prev.next=reverse(tail,k);\n                prev=tail;\n            }\n        }\n        return root.next;\n    }\n    \n    private ListNode reverse(ListNode head,int k)\n    {\n        ListNode prev=null;\n        ListNode cur=head;\n        ListNode next=null;\n        \n        while(cur!=null && k-- >0)\n        {\n            next=cur.next;\n            cur.next=prev;\n            prev=cur;\n            cur=next;\n        }\n        head=prev;\n        return head;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-nodes-in-k-group"}