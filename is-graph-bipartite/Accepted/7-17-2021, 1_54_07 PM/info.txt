{"id":523813770,"lang":"java","time":"1Â week","timestamp":1626510247,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/523813770/","is_pending":"Not Pending","title":"Is Graph Bipartite?","memory":"39.6 MB","code":"class Solution {\n    public boolean isBipartite(int[][] graph) {\n        int[] colors=new int[graph.length];\n        for(int i=0;i<graph.length;i++)\n        {\n            if(colors[i]==0 && !isValidColor(graph,colors,1,i))return false;\n        }\n        \n        return true;\n    }\n    \n    private boolean isValidColor(int[][] graph,int[] colors,int c,int node)\n    {\n        if(colors[node]!=0) //Already coloured\n        {\n            return colors[node]==c; //is fine otherwise rekt\n        }\n        \n        colors[node]=c;\n        \n        for(int nbr : graph[node])\n        {\n            if(!isValidColor(graph,colors,-c,nbr))return false;\n        }\n        \n        return true;\n    }\n}\n\n//Graph colouring DFS\n// 0 -> not coloured\n//1 -> green\n//-1 -> red","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"is-graph-bipartite"}