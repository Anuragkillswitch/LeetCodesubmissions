{"id":493951875,"lang":"java","time":"2 months, 1 week","timestamp":1621168087,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/493951875/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"38.3 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {\n        ListNode dummy=new ListNode(-1);\n        ListNode head=dummy;\n        \n        while(l1!=null && l2!=null)\n        {\n            if(l1.val<l2.val)\n            {   dummy.next=l1;\n                 l1=l1.next;\n            }else\n            {\n                dummy.next=l2;\n                l2=l2.next;\n            }\n            dummy=dummy.next;\n        }\n        \n        if(l1!=null)\n           dummy.next=l1;\n        \n        if(l2!=null)\n            dummy.next=l2;\n        \n        \n        return head.next;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists"}