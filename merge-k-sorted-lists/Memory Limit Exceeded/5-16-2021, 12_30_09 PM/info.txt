{"id":493852369,"lang":"java","time":"2 months, 1 week","timestamp":1621148409,"status_display":"Memory Limit Exceeded","runtime":"N/A","url":"/submissions/detail/493852369/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeKLists(ListNode[] lists) {\n        PriorityQueue<Integer> MinHeap=new PriorityQueue<>();\n        \n        for(ListNode head : lists)\n        {\n            while(head!=null)\n                MinHeap.add(head.val); //All the integer values are added to Minheap\n            head=head.next;\n        }\n        \n        ListNode dummy=new ListNode(-1);\n        ListNode head=dummy;\n        while(!MinHeap.isEmpty())\n        {\n            head.next=new ListNode(MinHeap.remove());\n            head=head.next;\n        }\n        \n        return dummy.next;\n        \n    }\n}","compare_result":"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"merge-k-sorted-lists"}