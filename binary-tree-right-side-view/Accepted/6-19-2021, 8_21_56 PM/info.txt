{"id":510164570,"lang":"java","time":"1Â month","timestamp":1624114316,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/510164570/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"40.3 MB","code":"class Solution {\n    public List<Integer> rightSideView(TreeNode root) {\n        int[] levels = new int[1001];\n        List<Integer> list = new ArrayList<>();\n        dfs(root,list,0,levels);\n        return list;\n    }\n    \n    private void dfs(TreeNode currNode, List<Integer> list, int level,int[] levels){\n        if(null == currNode){\n            return;\n        }\n        //Pre-Order\n        if(levels[level] == 0){\n            list.add(currNode.val);\n            levels[level] = 1;\n        }\n\t\t\n\t\t//Process right child first\n        dfs(currNode.right,list,level+1,levels);\n        \n        dfs(currNode.left,list,level+1,levels);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view"}