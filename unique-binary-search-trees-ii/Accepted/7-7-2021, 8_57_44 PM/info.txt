{"id":518821795,"lang":"java","time":"2 weeks, 3 days","timestamp":1625671664,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/518821795/","is_pending":"Not Pending","title":"Unique Binary Search Trees II","memory":"39.5 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<TreeNode> generateTrees(int n) {\n        return generateTrees(1,n);\n    }\n    \n    private ArrayList<TreeNode> generateTrees(int left,int right)\n    { ArrayList<TreeNode> t=new ArrayList<>();\n        if(left>right)\n        {\n           \n            t.add(null);\n            return t;\n        }\n        \n        for(int i=left;i<=right;i++)\n        {\n            List<TreeNode> leftList=generateTrees(left,i-1);\n            List<TreeNode> rightList=generateTrees(i+1,right);\n            \n            for(TreeNode c : leftList)\n            {\n                for(TreeNode d : rightList)\n                {\n                    TreeNode root=new TreeNode(i);\n                    root.left=c;\n                    root.right=d;\n                    t.add(root);\n                }\n            }\n            \n            \n        }\n        return t;\n    }\n}","compare_result":"11111111","title_slug":"unique-binary-search-trees-ii"}