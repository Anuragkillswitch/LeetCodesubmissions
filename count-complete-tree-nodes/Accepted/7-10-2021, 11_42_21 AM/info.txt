{"id":520123773,"lang":"java","time":"2 weeks, 1 day","timestamp":1625897541,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/520123773/","is_pending":"Not Pending","title":"Count Complete Tree Nodes","memory":"41.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int countNodes(TreeNode root) {\n        \n        if(root == null) return 0;\n        return countNodes(root.left) + countNodes(root.right)+1;\n    }\n}\n\n//Less than O(n) -> O(log(n))\n","compare_result":"111111111111111111","title_slug":"count-complete-tree-nodes"}