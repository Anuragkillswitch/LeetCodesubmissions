{"id":512584908,"lang":"java","time":"1Â month","timestamp":1624546020,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/512584908/","is_pending":"Not Pending","title":"Group Anagrams","memory":"N/A","code":"class Solution {\n  public List < List < String >> groupAnagrams(String[] strs) {\n    Map<String, List<String>> map = new HashMap<>(strs.length);\n        char[] counts = new char[26];\n        for(int i = 0; i < strs.length; i++) {\n            Arrays.fill(counts, '0');\n            for(char c : strs[i].toCharArray()) {\n                counts[c - 'a']++;\n            }\n            String key = new String(counts);\n            if(!map.containsKey(key)) {\n                map.put(key, new ArrayList<>());\n            }\n            map.get(key).add(strs[i]);\n        }\n        return new ArrayList<>(map.values());\n    }\n  }\n}","compare_result":null,"title_slug":"group-anagrams"}