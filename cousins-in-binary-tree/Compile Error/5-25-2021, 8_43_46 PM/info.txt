{"id":498107305,"lang":"java","time":"2Â months","timestamp":1621955626,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/498107305/","is_pending":"Not Pending","title":"Cousins in Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isCousins(TreeNode root, int x, int y) {\n        if(root.val==x || root.val==y)\n            return false;\n        \n        int xParent=-1;\n        \n        int xHeight=FindHeight(root,xParent,x,0);\n        \n        int yParent=-1;\n        int yHeight=FindHeight(root,yParent,y,0);\n\n        return (xParent!=yParent && xHeight==yHeight);\n        \n    }\n    \n    private int FindHeight(TreeNode root,int parent,int val,int height)\n    {\n        if(root==null)\n            return 0;\n        \n        if(root.val==val)\n            return height;\n        \n        parent=root.val;\n        int left=FindHeight(root.left,parent,val,height+1);\n        \n        if(left) return left;\n        \n        parent=root.val;\n        int right=FindHeight(root.right,parent,val,height+1);\n        \n        return right;\n        \n    }\n}","compare_result":null,"title_slug":"cousins-in-binary-tree"}