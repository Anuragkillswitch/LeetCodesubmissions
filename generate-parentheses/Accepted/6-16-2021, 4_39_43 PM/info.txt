{"id":508733681,"lang":"java","time":"1 month, 1 week","timestamp":1623841783,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/508733681/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"39.1 MB","code":"class Solution {\n    public List<String> generateParenthesis(int n) {\n        List<String> ans = new ArrayList();\n        backtrack(ans, new StringBuilder(), 0, 0, n);\n        return ans;\n    }\n\n    public void backtrack(List<String> ans, StringBuilder cur, int open, int close, int max){\n        if (cur.length() == max * 2) {\n            ans.add(cur.toString());\n            return;\n        }\n\n        if (open < max) {\n            cur.append(\"(\");\n            backtrack(ans, cur, open+1, close, max);\n            cur.deleteCharAt(cur.length() - 1);\n        }\n        if (close < open) {\n            cur.append(\")\");\n            backtrack(ans, cur, open, close+1, max);\n            cur.deleteCharAt(cur.length() - 1);\n        }\n    }\n}","compare_result":"11111111","title_slug":"generate-parentheses"}