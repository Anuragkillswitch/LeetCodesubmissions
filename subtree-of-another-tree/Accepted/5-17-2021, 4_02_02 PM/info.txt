{"id":494379486,"lang":"c","time":"2 months, 1 week","timestamp":1621247522,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/494379486/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"11 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     struct TreeNode *left;\n *     struct TreeNode *right;\n * };\n */\n\nbool isSameTree(struct TreeNode* root,struct TreeNode* subRoot)\n{\n    if(root==NULL || subRoot==NULL)\n        return (root==NULL && subRoot==NULL);\n    else if(root->val==subRoot->val)\n    {\n        return isSameTree(root->left,subRoot->left) && isSameTree(root->right,subRoot->right);\n    }else\n    {\n        return false;\n    }\n        \n}\n\n\nbool isSubtree(struct TreeNode* root, struct TreeNode* subRoot){\n    if(root==NULL )\n        return false;\n    else if(isSameTree(root,subRoot))\n        return true;\n    else\n        return isSubtree(root->left,subRoot) || isSubtree(root->right,subRoot);\n    \n}\n\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subtree-of-another-tree"}