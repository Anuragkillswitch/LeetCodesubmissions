{"id":512702770,"lang":"java","time":"1Â month","timestamp":1624564343,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/512702770/","is_pending":"Not Pending","title":"Sudoku Solver","memory":"36.6 MB","code":"class Solution {\n    public void solveSudoku(char[][] board) {\n        solve(0,0,board);\n    }\n\t//We are going to traverse each column in the row before going for the next row\n    public boolean solve(int row,int col,char[][] board){\n\t\tif(col == board.length){\n\t\t\t//All the columns of the current row has been traversed\n\t\t\t\n\t\t\tif(row == board.length-1){\n\t\t\t\t//End of the sudoku matrix\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t//Otherwise\n\t\t\trow++;\n\t\t\tcol = 0;\n\t\t}\n\t\tif(board[row][col] != '.'){\n\t\t\t//If the current entry is already filled\n\t\t\treturn solve(row,col+1,board);\n\t\t}\n\t\t\n\t\tfor(int i = 1;i<10;i++){\n\t\t\t//Check all the possible digits\n\t\t\tif(isValid(i,row,col,board)){\n\t\t\t\t//found a valid digit then move ahead to the next column\n\t\t\t\tboard[row][col] = Character.forDigit(i,10);\n\t\t\t\tif(solve(row,col+1,board)){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//If the current entry is inValid, replace with zero and return false\n\t\tboard[row][col] = '.';\n\t\treturn false;\n\t}\n    public boolean isValid(int value, int row,int col, char[][] board){\n\t\tboolean rowIsValid = true;\n\t\tboolean colIsValid = true;\n        char digit = Character.forDigit(value,10);\n\t\tfor(int i = 0;i<9;i++){\n\t\t\t//Check if valid in row\n\t\t\tif(digit == board[row][i]){\n\t\t\t\trowIsValid = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t//Check if valid in column\n\t\t\tif(digit == board[i][col]){\n\t\t\t\tcolIsValid = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!rowIsValid || !colIsValid){\n\t\t\treturn false;\n\t\t}\n\t\tint subgridrow = row / 3;\n\t\tint subgridcol = col /3;\n\t\t\n\t\t//Check if valid in 3x3 grid\n\t\tfor(int i = 0;i<3;i++){\n\t\t\tfor(int j = 0;j<3;j++){\n\t\t\t\tint currRow = subgridrow * 3 + i;\n\t\t\t\tint currCol = subgridcol * 3 + j;\n                \n\t\t\t\tif(digit == board[currRow][currCol]){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\t","compare_result":"111111","title_slug":"sudoku-solver"}