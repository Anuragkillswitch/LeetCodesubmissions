{"id":522437215,"lang":"java","time":"1 week, 3 days","timestamp":1626268410,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/522437215/","is_pending":"Not Pending","title":"Custom Sort String","memory":"38.9 MB","code":"class Solution {\n    public String customSortString(String order, String str) {\n       HashMap<Character,Integer> hm = new HashMap<>();\n        for(int i=0;i<str.length();i++)    // creating the frequency of each character using hashmap\n        {\n            if(hm.containsKey(str.charAt(i)))\n               hm.put(str.charAt(i),hm.get(str.charAt(i))+1);\n            else\n               hm.put(str.charAt(i),1);\n        }\n        String res =\"\";\n        \n        for(int i=0;i<order.length();i++)\n        {\n            char ch=order.charAt(i);\n            if(!hm.containsKey(ch))        //  If the string character is not present in the order string\n                continue;\n            int freq = hm.get(ch);\n            for(int j=0;j<freq;j++)\n                res+=Character.toString(ch);     // appending the result\n            hm.remove(ch);         // freeing the hashmap\n        }\n        \n        for(Character key : hm.keySet()) // Appending Remaining characters that are not present in the order string\n        {\n            int freq = hm.get(key);\n            for(int j=0;j<freq;j++)\n                res+=Character.toString(key);\n        }\n               return res;\n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"custom-sort-string"}