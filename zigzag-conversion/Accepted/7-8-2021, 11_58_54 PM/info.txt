{"id":519418873,"lang":"java","time":"2 weeks, 2 days","timestamp":1625768934,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/519418873/","is_pending":"Not Pending","title":"ZigZag Conversion","memory":"39.1 MB","code":"class Solution {\n    public String convert(String s, int numRows) {\n\n        if (numRows == 1) return s;\n\n        StringBuilder ret = new StringBuilder();\n        int n = s.length();\n        int cycleLen = 2 * numRows - 2;\n\n        for (int i = 0; i < numRows; i++) {\n            for (int j = 0; j + i < n; j += cycleLen) {\n                ret.append(s.charAt(j + i));\n                if (i != 0 && i != numRows - 1 && j + cycleLen - i < n)\n                    ret.append(s.charAt(j + cycleLen - i));\n            }\n        }\n        return ret.toString();\n    }\n}","compare_resulttitle_slug":"zigzag-conversion"}