{"id":500514594,"lang":"java","time":"1 month, 3 weeks","timestamp":1622402803,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/500514594/","is_pending":"Not Pending","title":"Count Number of Nice Subarrays","memory":"N/A","code":"Class Solution{\npublic int numberOfSubarrays(int[] nums, int k) {\n         //Replace all odd by 1 and even by 0\n        for(int i=0;i<nums.length;i++){\n            nums[i] = (nums[i] %2 == 0) ? 0 : 1;\n        }\n        \n        //problem becomes number of subarrays with sum = k\n        HashMap<Integer,Integer> map = new HashMap<>();\n        int res = 0;\n        int sum = 0;//cumulative sum\n        map.put(0,1);\n        for(int i=0;i<nums.length;i++){\n            sum+=nums[i];\n            if(map.containsKey(sum - k)){\n                res+=map.get(sum - k);\n            }\n            map.put(sum,map.getOrDefault(sum,0)+1);\n        }\n        return res;\n    }\n}   ","compare_result":null,"title_slug":"count-number-of-nice-subarrays"}