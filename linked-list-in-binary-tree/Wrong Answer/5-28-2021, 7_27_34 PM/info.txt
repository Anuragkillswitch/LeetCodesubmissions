{"id":499446487,"lang":"java","time":"1 month, 3 weeks","timestamp":1622210254,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/499446487/","is_pending":"Not Pending","title":"Linked List in Binary Tree","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isSubPath(ListNode head, TreeNode root) {\n         if(root==null)\n             return false;\n           \n        return SearchTree(root,head);\n    }\n    \n    private boolean SearchTree(TreeNode root,ListNode head)\n    {\n        if(root==null)\n             return false;\n        \n        if(head==null)\n            return true;\n        \n        if(root.val==head.val)\n        {\n            return SearchTree(root.left,head.next) || SearchTree(root.right,head.next);\n        }\n        \n        return true;\n    }\n    \n}","compare_result":"1101111101011101010110111111111100000101101111011111110101101100010","title_slug":"linked-list-in-binary-tree"}