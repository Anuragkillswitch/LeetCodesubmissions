{"id":500481034,"lang":"java","time":"1 month, 3 weeks","timestamp":1622397732,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/500481034/","is_pending":"Not Pending","title":"Maximum Gap","memory":"39.2 MB","code":"class Solution {\n\n    // TC : O(n)\n    // SC : O(n)\n   \n public int maximumGap(int[] nums) {\n    \n      if(nums.length<2)return 0;\n      int min = nums[0] , max = 0;\n    \n      for(int num : nums){\n          min = Math.min(min,num);\n          max = Math.max(max,num);\n      }\n      \n      int interval = (int)Math.ceil((max-min+0.0)/(nums.length-1));\n    \n      int[] bucketMin = new int[nums.length-1];\n      int[] bucketMax = new int[nums.length-1];\n      \n      Arrays.fill(bucketMin,Integer.MAX_VALUE);\n      Arrays.fill(bucketMax,-1);\n      \n      for(int i=0;i<nums.length;i++){\n          if(nums[i]==min || nums[i]==max)continue;\n          \n          int index = (nums[i]-min)/interval;\n          bucketMin[index] = Math.min(bucketMin[index],nums[i]);\n          bucketMax[index] = Math.max(bucketMax[index],nums[i]);\n      }\n        \n      int prev = min;\n      int maxGap = 0;\n      for(int i=0;i<bucketMin.length;i++){\n          if(bucketMax[i]==-1)continue;\n          maxGap = Math.max(bucketMin[i]-prev,maxGap);\n          prev = bucketMax[i];\n      }\n      maxGap = Math.max(max-prev,maxGap);\n      \n      return maxGap;\n    }\n    \n}","compare_result":"11111111111111111","title_slug":"maximum-gap"}