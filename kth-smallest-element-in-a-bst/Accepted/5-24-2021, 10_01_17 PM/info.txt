{"id":497664832,"lang":"java","time":"2Â months","timestamp":1621873877,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/497664832/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"38.7 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n\n//The Kth thing in the in-order traversal would give us the Kth smallest \n//Element in a binary search tree\nclass Solution {\n    List<TreeNode> l;\n    public int kthSmallest(TreeNode root, int k) {\n        l=new ArrayList<>();\n        inOrder(root);\n        return l.get(k-1).val;\n    }\n    \n    private void inOrder(TreeNode root)\n    {\n        if(root==null)\n            return;\n        inOrder(root.left);\n        l.add(root);\n        inOrder(root.right);\n        return;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-element-in-a-bst"}