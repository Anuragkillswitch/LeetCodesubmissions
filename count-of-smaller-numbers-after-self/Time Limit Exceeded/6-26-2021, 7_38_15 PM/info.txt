{"id":513440864,"lang":"c","time":"4Â weeks","timestamp":1624716495,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/513440864/","is_pending":"Not Pending","title":"Count of Smaller Numbers After Self","memory":"N/A","code":"struct btree\n{\n    int value;\n    int lcount;\n    int fcount;\n    struct btree *left;\n    struct btree *right;\n};\nstruct btree * initNode(int value, int lcount,int fcount){\n    //printf(\"value=%d,count=%d\\n\",value,count);\n    struct btree *pNode;\n\n    pNode=(struct btree *)malloc(sizeof(struct btree));\n    pNode->value=value;\n    pNode->left=NULL;\n    pNode->right=NULL;\n    pNode->lcount=lcount;\n    pNode->fcount=fcount;\n    return pNode;\n}\nint insertTree(struct btree *pTree,int num)\n{\n    struct btree *p,*f,*pNode,*maxNode;\n    maxNode=NULL;\n    int count=0;\n    p=pTree;\n    printf(\"num=%d\\n\",num);\n    while(p)\n    {\n        f=p;\n        if(num<=(p->value))\n        {\n            p->lcount++;\n            //printf(\"value=%d,count=%d,k=%d\\n\",p->value,p->count,p->k);\n            p=p->left;\n        }\n        else\n        {\n            maxNode=p;\n            p=p->right;\n        }\n        if(p&&maxNode)\n            p->fcount=maxNode->lcount+maxNode->fcount+1;\n    }\n    if(maxNode)\n        count=maxNode->lcount+maxNode->fcount+1;\n    //printf(\"f->value=%d,f->lcount=%d,f->fcount=%d\\n\\n\",f->value,f->lcount,f->fcount);\n    pNode=initNode(num,0,count);\n    if(num>(f->value))\n        f->right=pNode;\n    else\n        f->left=pNode;\n    return count;\n}\nint* countSmaller(int* nums, int numsSize, int* returnSize)\n{\n    struct btree *pHead;\n    int *counts;\n    int i;\n    counts=(int *)malloc(numsSize*sizeof(int));\n    counts[numsSize-1]=0;\n    pHead=initNode(nums[numsSize-1],0,0);\n    for(i=numsSize-2;i>=0;i--)\n        counts[i]=insertTree(pHead,nums[i]);\n    *returnSize=numsSize;\n    return counts;\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111000","title_slug":"count-of-smaller-numbers-after-self"}