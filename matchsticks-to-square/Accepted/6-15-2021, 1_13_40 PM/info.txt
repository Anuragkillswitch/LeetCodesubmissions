{"id":508177977,"lang":"java","time":"1 month, 1 week","timestamp":1623743020,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/508177977/","is_pending":"Not Pending","title":"Matchsticks to Square","memory":"36.6 MB","code":"import java.util.HashMap;\nimport java.util.Collections;\n\nclass Solution {\n    public List<Integer> nums;\n    public int[] sums;\n    public int possibleSquareSide;\n\n    public Solution() {\n        this.sums = new int[4];\n    }\n\n    // Depth First Search function.\n    public boolean dfs(int index) {\n\n        // If we have exhausted all our matchsticks, check if all sides of the square are of equal length\n        if (index == this.nums.size()) {\n            return sums[0] == sums[1] && sums[1] == sums[2] && sums[2] == sums[3];\n        }\n\n        // Get current matchstick.\n        int element = this.nums.get(index);\n\n        // Try adding it to each of the 4 sides (if possible)\n        for(int i = 0; i < 4; i++) {\n            if (this.sums[i] + element <= this.possibleSquareSide) {\n                this.sums[i] += element;\n                if (this.dfs(index + 1)) {\n                    return true;\n                }\n                this.sums[i] -= element;\n            }\n        }\n\n        return false;\n    }\n\n    public boolean makesquare(int[] nums) {\n        // Empty matchsticks.\n        if (nums == null || nums.length == 0) {\n            return false;\n        }\n\n        // Find the perimeter of the square (if at all possible)\n        int L = nums.length;\n        int perimeter = 0;\n        for(int i = 0; i < L; i++) {\n            perimeter += nums[i];\n        }\n\n        this.possibleSquareSide =  perimeter / 4;\n        if (this.possibleSquareSide * 4 != perimeter) {\n            return false;\n        }\n\n        // Convert the array of primitive int to ArrayList (for sorting).\n        this.nums = Arrays.stream(nums).boxed().collect(Collectors.toList());\n        Collections.sort(this.nums, Collections.reverseOrder());\n        return this.dfs(0);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"matchsticks-to-square"}