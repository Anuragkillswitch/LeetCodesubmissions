{"id":514848860,"lang":"java","time":"3 weeks, 4 days","timestamp":1624963060,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/514848860/","is_pending":"Not Pending","title":"Max Consecutive Ones III","memory":"40.3 MB","code":"class Solution {\n    \n    public int longestOnes(int[] nums, int k) {\n        \n        \n        int n = nums.length;\n        \n        int i = 0, j = 0, count = 0, Max1 = 0;\n        \n        // Check for all elements from index j : 0 to n-1\n        \n        while (j < n) {\n            \n            // If current element 0, increment count\n            \n            if (nums[j] == 0) {\n                count++;\n            }\n            \n            j++;   // check for next element\n\n            \n            while (i < j && count > k) {\n                \n                if (nums[i] == 0) {\n                    count--;  \n                }\n                \n                i++;\n                \n            }\n            \n            \n            int currMax1 = j - i;    \n            \n            Max1 = Math.max(Max1, currMax1);\n            \n        }\n        \n        return Max1;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"max-consecutive-ones-iii"}