{"id":501867560,"lang":"java","time":"1 month, 3 weeks","timestamp":1622637172,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/501867560/","is_pending":"Not Pending","title":"Interleaving String","memory":"39.1 MB","code":"class Solution {\n    public boolean isInterleave(String s1, String s2, String s3) {\n        if(s1.length() + s2.length() != s3.length()) return false;\n        int[][] cache = new int[s1.length() + 1][s2.length() + 1];\n        for(int i = 0; i < cache.length; i++)\n            Arrays.fill(cache[i], -1);\n        return recurse(s1, s2, s3, 0, 0, 0, cache);\n    }\n    \n    boolean recurse(String s1, String s2, String s3, int i, int j, int k, int[][] cache) {\n        if(i == s1.length() && j == s2.length()) {\n            return true;\n        }\n        if(cache[i][j] != -1) return cache[i][j] == 1;\n        char c = s3.charAt(k);\n        boolean ans = false;\n        if(i < s1.length() && s1.charAt(i) == c && j < s2.length() && s2.charAt(j) == c) {\n            ans = recurse(s1, s2, s3, i+1, j , k+1, cache) \n                || recurse(s1, s2, s3, i, j+1, k+1, cache);\n        } else if(i < s1.length() && s1.charAt(i) == c) {\n            ans = recurse(s1, s2, s3, i+1, j, k+1, cache);\n        } else if(j < s2.length() && s2.charAt(j) == c) {\n            ans = recurse(s1, s2, s3, i, j+1, k+1, cache);\n        }\n        cache[i][j] = ans ? 1 : 0;\n        return ans;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"interleaving-string"}