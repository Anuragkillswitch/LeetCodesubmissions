{"id":510984573,"lang":"java","time":"1Â month","timestamp":1624258825,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/510984573/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"39.1 MB","code":"class Solution {\n    public int minSubArrayLen(int target, int[] nums) {\n        int minLength=Integer.MAX_VALUE;\n        \n        int left=0;\n        int cumulativeSum=0;\n        \n        for(int i=0;i<nums.length;i++)\n        {\n            cumulativeSum+=nums[i];\n            \n           while(cumulativeSum>=target ) //You have to keep doing that till the condition is gone ,Not just once!\n            {\n                minLength=Math.min(minLength,i+1-left);\n                cumulativeSum-=nums[left];\n                left++;\n            }\n        }\n        \n        return minLength!=Integer.MAX_VALUE?minLength:0;\n    }\n}","compare_result":"1111111111111111111","title_slug":"minimum-size-subarray-sum"}