{"id":523827713,"lang":"java","time":"1Â week","timestamp":1626512853,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/523827713/","is_pending":"Not Pending","title":"Is Graph Bipartite?","memory":"39.6 MB","code":"class Solution {\n    public boolean isBipartite(int[][] g) {\n        int[] colors = new int[g.length];\n        for (int i = 0; i < g.length; i++)\n            if (colors[i] == 0) {\n                Queue<Integer> q = new LinkedList<>();\n                q.add(i);\n                colors[i] = 1;\n                while (!q.isEmpty()) {\n                    Integer node = q.poll();\n                    for (int adjacent : g[node])\n                        if (colors[adjacent] == colors[node])\n                            return false;\n                        else if (colors[adjacent] == 0) {\n                            q.add(adjacent);\n                            colors[adjacent] = -colors[node];\n                        }\n                }\n            }\n        return true;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"is-graph-bipartite"}