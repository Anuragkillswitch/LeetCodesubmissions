{"id":523511500,"lang":"java","time":"1Â week, 1Â day","timestamp":1626450616,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/523511500/","is_pending":"Not Pending","title":"4Sum","memory":"39.7 MB","code":"class Solution {\n public List<List<Integer>> fourSum(int[] nums, int target) {\n    Arrays.sort(nums);\n    return kSum(nums, target, 0, 4);\n}\npublic List<List<Integer>> kSum(int[] nums, int target, int start, int k) {\n    List<List<Integer>> res = new ArrayList<>();\n    if (start == nums.length || nums[start] * k > target || target > nums[nums.length - 1] * k)\n        return res;\n    if (k == 2)\n        return twoSum(nums, target, start);\n    for (int i = start; i < nums.length; ++i)\n        if (i == start || nums[i - 1] != nums[i])\n            for (var set : kSum(nums, target - nums[i], i + 1, k - 1)) {\n                res.add(new ArrayList<>(Arrays.asList(nums[i])));\n                res.get(res.size() - 1).addAll(set);\n            }\n    return res;\n}\npublic List<List<Integer>> twoSum(int[] nums, int target, int start) {\n    List<List<Integer>> res = new ArrayList<>();\n    Set<Integer> s = new HashSet<>();\n    for (int i = start; i < nums.length; ++i) {\n        if (res.isEmpty() || res.get(res.size() - 1).get(1) != nums[i])\n            if (s.contains(target - nums[i]))\n                res.add(Arrays.asList(target - nums[i], nums[i]));\n        s.add(nums[i]);\n    }\n    return res;\n}\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"4sum"}