{"id":511714906,"lang":"java","time":"1Â month","timestamp":1624386668,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/511714906/","is_pending":"Not Pending","title":"Number of Days Between Two Dates","memory":"37.3 MB","code":"class Solution {\n    public int daysBetweenDates(String date1, String date2) {\n        String[] d1 = date1.split(\"-\");\n        String[] d2 = date2.split(\"-\");\n        \n        int[] id1 = {Integer.valueOf(d1[0]), Integer.valueOf(d1[1]), Integer.valueOf(d1[2])};\n        int[] id2 = {Integer.valueOf(d2[0]), Integer.valueOf(d2[1]), Integer.valueOf(d2[2])};\n        \n        int[][] m2d = {{-1, \n                      31,28,31,30,31,30,31,\n                      31,30,31,30,31},\n                     {-1, \n                      31,29,31,30,31,30,31,\n                      31,30,31,30,31}};\n        \n        long days1 = 0;\n        long days2 = 0;\n        \n        //Year\n        for(int i = 1971; i < id1[0]; i++)\n            days1 += leap(i) == 1 ? 366 : 365;\n        \n        for(int i = 1971; i < id2[0]; i++)\n            days2 += leap(i) == 1 ? 366 : 365;\n        \n        //Month\n        int leap1 = leap(id1[0]);\n        int leap2 = leap(id2[0]);\n        \n        for(int i = 1; i < id1[1]; i++)\n            days1 += m2d[leap1][i]; \n        \n        for(int i = 1; i < id2[1]; i++)\n            days2 += m2d[leap2][i]; \n        \n        \n        //Day\n        days1 += id1[2];\n        days2 += id2[2];\n        \n        return (int)Math.abs(days1 - days2);\n    }\n    \n    private int leap (int year){\n        if(year % 4 != 0 )\n            return 0;\n        else if(year % 100 != 0)\n            return 1;\n        else if(year % 400 != 0)\n            return 0;\n        else\n            return 1;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-days-between-two-dates"}