{"id":499428540,"lang":"java","time":"1 month, 3 weeks","timestamp":1622206684,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/499428540/","is_pending":"Not Pending","title":"Task Scheduler","memory":"40.3 MB","code":"class Solution {\n    public int leastInterval(char[] tasks, int n) {\n        //Since it is only capital letters we can use array with relative indexing to\n        //Keep the character counts\n        \n        int[] charMaps=new int[26]; //Only uppercase letters\n        \n        for(char c : tasks)\n            charMaps[c-'A']++; //Relative indexing 0 to 26 A to Z\n        \n        \n        //Now we will sort the charMaps array so that we can retrieve\n        //The maximum occuring tasks' frequency\n        \n        Arrays.sort(charMaps);\n        int max=charMaps[25]-1; //On the very last task we do not need to wait or stay idle //0 to 25\n        int idleSlots=max*n; //For each character we have n idle slots\n        \n        for(int i=24;i>=0;i--)\n        {\n            idleSlots-=Math.min(charMaps[i],max);\n            if(charMaps[i]==0)\n                break;\n        }\n        \n        \n        return idleSlots>0?idleSlots+tasks.length:tasks.length;\n           \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"task-scheduler"}