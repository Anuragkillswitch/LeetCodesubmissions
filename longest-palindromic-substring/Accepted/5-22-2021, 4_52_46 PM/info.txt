{"id":496614707,"lang":"java","time":"2Â months","timestamp":1621682566,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/496614707/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"39 MB","code":"class Solution {\n    int start=0, end=0, len=0;\n    char c[];\n    public String longestPalindrome(String s) {\n        c=s.toCharArray();\n        for(int x=1; x<c.length-(end-start)/2; x++) {     //condition to stopp extra \n            find(x-1,x);                                  //for type 1\n            find(x-1,x+1);                                //for type 2\n        }\n        return new String(c, start, end-start+1);\n    }\n    void find(int x, int y) {\n        while(x>=0 && y<c.length) {\n            if(c[x]!=c[y])\n                break;\n            --x;\n            ++y;\n        }\n        ++x;--y;\n        if(end-start>=y-x)\n            return;\n        start=x;\n        end=y;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring"}