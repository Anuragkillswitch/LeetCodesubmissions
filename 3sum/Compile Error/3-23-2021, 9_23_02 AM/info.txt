{"id":471269231,"lang":"c","time":"4Â months","timestamp":1616471582,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/471269231/","is_pending":"Not Pending","title":"3Sum","memory":"N/A","code":"int cmpfunc (const void * a, const void *b)\n{\nreturn ((int)a - (int)b);\n}\n\nint** threeSum(int* nums, int numsSize, int* returnSize) {\nint count = 0;\nint **buffer;\nint start, end, i, a, b, c;\n\nbuffer = calloc( numsSize*(numsSize-1),sizeof(int *));\nqsort(nums, numsSize, sizeof(int), cmpfunc);\n\nfor (i=0;i<numsSize-2;i++){\n    a = nums[i];\n    if(i>0 && a==nums[i-1])continue;\n    start = i+1;\n    end = numsSize-1;\n    while (start < end) {\n        b = nums[start];\n        c = nums[end];\n        if (a+b+c == 0){\n            buffer[count] = calloc(3, sizeof(int));\n            buffer[count][0]=a;\n            buffer[count][1]=b;\n            buffer[count][2]=c;\n            count++;\n         \n            // Continue search for all triplet combinations summing to zero.\n            while (b==nums[start+1]){\n                start++;\n            }\n            start++;\n            while (c==nums[end-1]){\n                end--;\n            }\n            end--;\n      }\n      else if (a+b+c > 0) \n          end = end - 1;\n      else\n          start = start + 1;\n      \n   }\n}\n*returnSize=count;\n\nreturn buffer;\n}","compare_result":null,"title_slug":"3sum"}