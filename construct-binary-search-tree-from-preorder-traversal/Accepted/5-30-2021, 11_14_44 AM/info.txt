{"id":500226118,"lang":"c","time":"1 month, 3 weeks","timestamp":1622353484,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/500226118/","is_pending":"Not Pending","title":"Construct Binary Search Tree from Preorder Traversal","memory":"8.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     struct TreeNode *left;\n *     struct TreeNode *right;\n * };\n */\n\n\nstruct TreeNode* construct(int* preorder,int left,int right)\n{\n    if(left>right)\n        return NULL;\n    struct TreeNode* root=malloc(sizeof(struct TreeNode));\n    root->left=NULL;  //The main problem is the children in the last element isn't set to NULL.\n    root->right=NULL;\n    root->val=preorder[left];\n    \n    if(left==right)\n        return root;\n    \n    int index=left+1;\n    while(index<=right && preorder[index]<preorder[left])\n         index++;\n    \n    root->left=construct(preorder,left+1,index-1);\n    root->right=construct(preorder,index,right);\n    return root;\n    \n}\n\n\n\nstruct TreeNode* bstFromPreorder(int* preorder, int preorderSize){\n    if(preorderSize==0)\n        return NULL;\n    \n    return construct(preorder,0,preorderSize-1);\n        \n}\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-binary-search-tree-from-preorder-traversal"}