{"id":526867011,"lang":"java","time":"2 days, 3 hours","timestamp":1627012456,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/526867011/","is_pending":"Not Pending","title":"Design HashSet","memory":"46.2 MB","code":"class MyHashSet {\n\n/** Initialize your data structure here. */\nint capacity=1500;\nLinkedList<Integer>[] a;\npublic MyHashSet() {\n    a=new LinkedList[capacity];\n}\npublic int calc_hash(int key)\n{\n return key%capacity;   \n}\n\npublic void add(int key) {\n    int i=calc_hash(key);\n    if(a[i]==null)\n        a[i]=new LinkedList<>();\n    if(a[i].indexOf(key)== -1)\n        a[i].add(key);\n}\n\npublic void remove(int key) {\n    int i=calc_hash(key);\n    if(a[i]==null || a[i].indexOf(key)== -1)\n        return;\n    a[i].remove(a[i].indexOf(key));\n}\n\n/** Returns true if this set contains the specified element */\npublic boolean contains(int key) {\n    int i=calc_hash(key);\n    if(a[i]==null || a[i].indexOf(key)== -1)\n        return false;\n    return true;\n}\n}","compare_result":"11111111111111111111111111111111","title_slug":"design-hashset"}