{"id":499742766,"lang":"c","time":"1 month, 3 weeks","timestamp":1622272575,"status_display":"Accepted","runtime":"128 ms","url":"/submissions/detail/499742766/","is_pending":"Not Pending","title":"Maximum Erasure Value","memory":"16.6 MB","code":"\n\nint maximumUniqueSubarray(int* nums, int numsSize){\n    int* hash=(int *)calloc(10001,sizeof(int));\nint r = 0, len = numsSize, l = 0, max = 0, sum = 0, cnt = 0;\n        while(r < len) {\n            sum += nums[r];\n\t\t\t// cnt > 0 means some number is duplicated\n            if(hash[nums[r++]]++ >= 1) cnt++;\n            while(cnt > 0) {\n\t\t\t\t// find the leftmost index that no duplicated numbers betwen [l, r]\n                sum -= nums[l];\n                if(hash[nums[l++]]-- == 2) cnt--;                \n            }\n            max = max>sum?max:sum;\n        }\n    free(hash);\n        return max;\n}\n\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-erasure-value"}