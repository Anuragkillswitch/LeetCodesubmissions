{"id":509070768,"lang":"java","time":"1 month, 1 week","timestamp":1623903581,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/509070768/","is_pending":"Not Pending","title":"Min Stack","memory":"N/A","code":"class MinStack {\n\n    /** initialize your data structure here. */\n    PriorityQueue<Integer> DS;\n    int LastElement;\n    int previous;\n    public MinStack() {\n        DS=new PriorityQueue<>();\n    }\n    \n    public void push(int val) {\n        DS.offer(val);\n        previous=LastElement;\n        LastElement=val;\n    }\n    \n    public void pop() {\n        DS.remove(LastElement);\n        LastElement=previous;\n    }\n    \n    public int top() {\n        return LastElement;\n    }\n    \n    public int getMin() {\n        int r=DS.poll();\n        DS.offer(r);\n        return r;\n    }\n}\n\n/**\n * Your MinStack object will be instantiated and called as such:\n * MinStack obj = new MinStack();\n * obj.push(val);\n * obj.pop();\n * int param_3 = obj.top();\n * int param_4 = obj.getMin();\n */","compare_result":"1111101111111000001111111111111","title_slug":"min-stack"}