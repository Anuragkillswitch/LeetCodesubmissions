{"id":499339340,"lang":"java","time":"1 month, 4 weeks","timestamp":1622187054,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/499339340/","is_pending":"Not Pending","title":"Path Sum II","memory":"39 MB","code":"class Solution {\n    private List<List<Integer>> result = new ArrayList<List<Integer>>();\n    private List<Integer> list = new ArrayList();\n    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {\n        if(root==null){\n            return new ArrayList();\n        }\n        dfs(root,targetSum);\n        return this.result;\n    }\n    private void dfs(TreeNode n, int targetSum){\n        this.list.add(n.val);\n        if(n.left==null&&n.right==null&& targetSum == n.val){\n            this.result.add(new ArrayList(this.list));\n        }\n        if(n.left!=null){\n            dfs(n.left, targetSum-n.val);\n        }\n        if(n.right!=null){\n            dfs(n.right,targetSum-n.val);\n        }\n        this.list.remove(this.list.size()-1);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-ii"}