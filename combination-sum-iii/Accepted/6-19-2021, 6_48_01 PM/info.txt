{"id":510131451,"lang":"java","time":"1Â month","timestamp":1624108681,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/510131451/","is_pending":"Not Pending","title":"Combination Sum III","memory":"36.1 MB","code":"class Solution {\n\tpublic List<List<Integer>> combinationSum3(int k, int target) {\n    \n\t\tList<List<Integer>> res = new ArrayList<>();\n\t\tList<Integer> path = new ArrayList<>();\n\t\tcombinationSumHelper(target, 1, k, path, res);\n\n\t\treturn res;\n\t}\n\n\tpublic static void combinationSumHelper(int target, int index, int k, List<Integer> path, List<List<Integer>> res) {\n\n\t\tif(target == 0 && k == 0) {\n\t\t\tres.add(new ArrayList(path));\n\t\t\treturn;\n\t\t}\n\t\tif(target<0 || index > 9 || k <0) {\n\n\t\t\treturn;\n\t\t}\n    \n\t\tfor(int i=index; i<=9; i++) {\n\n\t\t\t\tpath.add(i);\n\t\t\t\tcombinationSumHelper(target-i, i+1, k-1, path, res);\n\t\t\t\tpath.remove(path.size()-1);\n\t\t\t}\n\t\t}\n}","compare_result":"111111111111111111","title_slug":"combination-sum-iii"}