{"id":427842697,"lang":"c","time":"7 months, 2 weeks","timestamp":1607269375,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/427842697/","is_pending":"Not Pending","title":"Populating Next Right Pointers in Each Node II","memory":"N/A","code":"/**\n * Definition for a Node.\n * struct Node {\n *     int val;\n *     struct Node *left;\n *     struct Node *right;\n *     struct Node *next;\n * };\n */\n\nstruct Node* connect(struct Node* root) {\n\t // Rule 1. node->left->next  = node->right\n    // Rule 2. node->right->next = node->next->left\n\n    if (root == NULL) return;\n    \n    struct TreeLinkNode* node = root;\n    struct TreeLinkNode* next = root->left;\n\n    while (next) {\n        node->left->next  = node->right;\n\n        if (node->next) {\n            // Goto next subtree\n            node->right->next = node->next->left;\n            node              = node->next;\n        }\n        else {\n            // Goto next level\n            node = next;\n            next = next->left;\n} \n\n\n\n  ","compare_result":null,"title_slug":"populating-next-right-pointers-in-each-node-ii"}