{"id":409124058,"lang":"c","time":"9 months, 1 week","timestamp":1602782812,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/409124058/","is_pending":"Not Pending","title":"Remove Duplicates from Sorted Array","memory":"N/A","code":"void selectionSort(int arr[], int n) \n{ \n    int i, j, min_idx; \n  \n    // One by one move boundary of unsorted subarray \n    for (i = 0; i < n - 1; i++) { \n  \n        // Find the minimum element in unsorted array \n        min_idx = i; \n        for (j = i + 1; j < n; j++) \n            if (arr[j] < arr[min_idx]) \n                min_idx = j; \n  \n        // Swap the found minimum element \n        // with the first element \n        swap(&arr[min_idx], &arr[i]); \n    } \n} \n\nint removeDuplicates(int* nums, int numsSize){\n    int a[10000]={0};\n    int b[10000]={0};\n    int k=0;\nfor(int i=0;i<numsSize;i++)\n{\n    if(nums[i]<0)\n        b[-1*nums[i]]++;\n    else\n       a[nums[i]]++;\n}\n    for(int i=0;i<10000;i++)\n    {\n        if(a[i]!=0)\n        {\n            nums[k++]=i;\n        }\n        else if(b[i]!=0)\n        {\n            nums[k++]=-1*i;\n        } \n        else\n        {\n            continue;\n        }\n    }\n   selectionSort(nums,k);\n    return k;\n}","compare_result":null,"title_slug":"remove-duplicates-from-sorted-array"}