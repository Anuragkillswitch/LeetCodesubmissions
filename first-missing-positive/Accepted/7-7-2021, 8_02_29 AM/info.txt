{"id":518540539,"lang":"java","time":"2 weeks, 4 days","timestamp":1625625149,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/518540539/","is_pending":"Not Pending","title":"First Missing Positive","memory":"86.6 MB","code":"class Solution {\npublic int firstMissingPositive(int[] nums) {\n\tArrays.sort(nums);\n\tvar lastPositiveSeen = 1;\n\tfor (int i = 0; i < nums.length; i++) {\n\t\tif (nums[i] <= 0 || (i > 0 && nums[i] == nums[i - 1])) // ignore non-positives and duplicates\n\t\t\tcontinue;\n\t\tif (nums[i] == lastPositiveSeen)\n\t\t\tlastPositiveSeen++;\n\t\telse\n\t\t\tbreak;\n\t}\n\treturn lastPositiveSeen;\n}\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"first-missing-positive"}