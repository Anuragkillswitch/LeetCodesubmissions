{"id":496633681,"lang":"java","time":"2Â months","timestamp":1621686687,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/496633681/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"39.3 MB","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\n//Brute Force Solution using HashSet\n\npublic class Solution {\n    public boolean hasCycle(ListNode head) {\n        HashSet<ListNode> set=new HashSet<>();\n        \n        ListNode current=head;\n        \n        for(;current!=null;current=current.next)\n        {\n            if(set.contains(current))\n                return true;\n            \n            set.add(current);\n        }\n        return false;\n    }\n}","compare_result":"1111111111111111111","title_slug":"linked-list-cycle"}