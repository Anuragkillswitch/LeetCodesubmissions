{"id":468380297,"lang":"c","time":"4 months, 1 week","timestamp":1615869261,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/468380297/","is_pending":"Not Pending","title":"Sort Array By Parity","memory":"9.3 MB","code":"\n\n/**\n * Note: The returned array must be malloced, assume caller calls free().\n */\nint* sortArrayByParity(int* A, int ASize, int* returnSize){\n int *ReturnArray=(int *)malloc(ASize*sizeof(int));\n    int start=0;\n    int end=ASize-1;\n    for(int i=0;i<ASize;i++)\n    {\n        if(A[i]%2==0)\n        {\n            ReturnArray[start++]=A[i];\n        }\n        else\n        {\n            ReturnArray[end--]=A[i];\n        }\n    }\n    *returnSize=ASize;\n    return ReturnArray;\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sort-array-by-parity"}