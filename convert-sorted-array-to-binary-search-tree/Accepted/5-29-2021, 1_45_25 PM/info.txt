{"id":499762031,"lang":"java","time":"1 month, 3 weeks","timestamp":1622276125,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/499762031/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"39 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode sortedArrayToBST(int[] nums) {\n        if(nums.length==0) return null;\n        return ConstructTreeFromArray(nums,0,nums.length-1);\n    }\n    \n    private TreeNode ConstructTreeFromArray(int[] nums,int left,int right)\n    {\n        if(left>right)\n            return null;\n        \n        int midpoint=left+(right-left)/2;\n        \n        TreeNode node=new TreeNode(nums[midpoint]); //Root element created;\n        node.left=ConstructTreeFromArray(nums,left,midpoint-1);\n        node.right=ConstructTreeFromArray(nums,midpoint+1,right);\n        return node;\n        \n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree"}