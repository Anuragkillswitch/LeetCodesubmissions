{"id":493428506,"lang":"java","time":"2 months, 1 week","timestamp":1621079906,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/493428506/","is_pending":"Not Pending","title":"String Compression","memory":"38.7 MB","code":"class Solution {\n    public int compress(char[] chars) {\n        \n    \n        char prev=chars[0];\n        int count=0;\n        StringBuilder bopa=new StringBuilder();\n        int i;\n       for(i=0;i<chars.length;i++)\n       {\n           if(chars[i]!=prev)\n           {\n               if(count==1)\n                 bopa.append(chars[i-1]);\n               else\n               {\n                   bopa.append(chars[i-1]);\n                   bopa.append(count);\n               }  \n               \n               prev=chars[i];\n               count=1;//The letter is already at the index i\n           }else\n               count++;\n           \n         } \n        \n               if(count==1)       //Last character jeta\n                 bopa.append(chars[i-1]);\n               else\n               {\n                   bopa.append(chars[i-1]);\n                   bopa.append(count);\n               } \n      \n       for(int j=0;j<bopa.length();j++)\n       {\n           chars[j]=bopa.charAt(j);\n       }\n        \n        \n        return bopa.length();\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"string-compression"}