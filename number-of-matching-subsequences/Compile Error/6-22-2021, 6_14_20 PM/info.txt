{"id":511577992,"lang":"java","time":"1Â month","timestamp":1624365860,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/511577992/","is_pending":"Not Pending","title":"Number of Matching Subsequences","memory":"N/A","code":"class Solution {\n    public int numMatchingSubseq(String S, String[] words) {\n               \n        Map<String, Integer> wordMap = new HashMap<>();\n        for(String word : words)\n            wordMap.put(word, wordMap.getOrDefault(word, 0)+1);\n        \n        int count = 0;\n        for(String word : wordMap.keySet()){            \n            if(isSubsequence(S, word)){\n                count += wordset.get(word);\n            }\n        }\n        return count;\n        \n    }\n    \n    public boolean isSubsequence(String s, String sub){\n        if(sub.length() > s.length())\n            return false;\n        int i = 0, j = 0;\n        while(i < s.length() && j < sub.length()){\n            if(s.charAt(i) == sub.charAt(j)){\n                i++;\n                j++;\n            }\n            else{\n                i++;\n            }\n        }\n        return j == sub.length();\n    }\n}","compare_result":null,"title_slug":"number-of-matching-subsequences"}