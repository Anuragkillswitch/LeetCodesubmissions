{"id":507668996,"lang":"java","time":"1 month, 1 week","timestamp":1623652706,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/507668996/","is_pending":"Not Pending","title":"Even Odd Tree","memory":"56.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isEvenOddTree(TreeNode root) {\n       if(root==null)return true;\n        Queue<TreeNode> q=new LinkedList<>();\n        q.offer(root);\n        boolean evenLevel=true; //Initially the level is even (0)\n        \n        while(!q.isEmpty())\n        {\n            int size=q.size();\n            int prev=evenLevel?Integer.MIN_VALUE:Integer.MAX_VALUE;\n            for(int i=0;i<size;i++)\n            {\n               TreeNode Current=q.poll();\n               if(evenLevel && (Current.val%2==0 || Current.val<=prev))\n                   return false;\n               if(!evenLevel && (Current.val%2!=0 || Current.val>=prev))\n                   return false;\n                \n                prev=Current.val;\n                if(Current.left!=null)q.offer(Current.left);\n                if(Current.right!=null)q.offer(Current.right);\n               \n            }\n             evenLevel=!evenLevel;\n        \n         }\n        \n        return true;\n}  \n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"even-odd-tree"}