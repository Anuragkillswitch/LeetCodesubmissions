{"id":499383672,"lang":"java","time":"1 month, 3 weeks","timestamp":1622196365,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/499383672/","is_pending":"Not Pending","title":"Path Sum III","memory":"38.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int count=0;\n    ArrayList<Integer> list=new ArrayList<>();\n    public int pathSum(TreeNode root, int targetSum) {\n        getSum(root,targetSum);\n        return count;\n    }\n    \n    private void getSum(TreeNode root,int sum)\n    {\n        if(root==null)\n            return;\n        \n        list.add(root.val);\n        getSum(root.left,sum);\n        getSum(root.right,sum);\n        \n        //Pre Order??\n        \n        int temp=0;\n        \n        for(int i=list.size()-1;i>=0;i--)\n        {\n            temp+=list.get(i);\n            if(temp==sum)\n                 count++;\n        }\n        list.remove(list.size()-1);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-iii"}