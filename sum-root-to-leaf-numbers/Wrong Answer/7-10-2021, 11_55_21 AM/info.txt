{"id":520128744,"lang":"java","time":"2 weeks, 1 day","timestamp":1625898321,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/520128744/","is_pending":"Not Pending","title":"Sum Root to Leaf Numbers","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    List<Integer> paths;\n    public int sumNumbers(TreeNode root) {\n        if(root==null)return 0;\n        paths=new ArrayList<>();\n        \n        helper(root.left,new Integer(root.val));\n        helper(root.right,new Integer(root.val));\n        \n        int sum=0;\n        \n        for(int c : paths)\n            sum+=c;\n        return sum;\n    }\n    \n    private void helper(TreeNode root,int valuesSoFar)\n    {\n        if(root==null)return;\n        if(root.left==null && root.right==null)\n        {\n            valuesSoFar*=10;\n            valuesSoFar+=root.val;\n            paths.add(valuesSoFar);\n            return;\n        }\n        \n         valuesSoFar*=10;\n         valuesSoFar+=root.val;\n         helper(root.left,new Integer(valuesSoFar));\n         helper(root.right,new Integer(valuesSoFar));\n         return;\n        \n    }\n}","compare_result":"111011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-root-to-leaf-numbers"}