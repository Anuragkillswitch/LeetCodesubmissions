{"id":497537333,"lang":"java","time":"2Â months","timestamp":1621849372,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/497537333/","is_pending":"Not Pending","title":"Maximal Square","memory":"N/A","code":"class Solution {\n    public int maximalSquare(char[][] matrix) {\n        \n        \n        if(matrix.length==0)\n           return 0;\n        \n        int max=0;\n        int[][] dp=new int[matrix.length][matrix[0].length];\n        \n        for(int i=0;i<matrix[0].length;i++)\n        {\n            dp[0][i]=matrix[0][i];\n            max=Math.max(max,dp[0][i]);\n            //Maximum Area of the first row will be that\n        }\n        for(int i=0;i<matrix.length;i++)\n        {\n            dp[i][0]=matrix[i][0];\n            max=Math.max(max,dp[i][0]);//Maximum area of the first column will be that itself\n        }\n        \n        for(int i=1;i<matrix.length;i++)\n        {\n            for(int j=1;j<matrix[i].length;j++)\n            {\n                if(matrix[i][j]=='1')\n                { dp[i][j]=Math.min(dp[i][j-1],Math.min(dp[i-1][j],dp[i-1][j-1]))+1;\n                max=Math.max(max,dp[i][j]);\n            }}\n        }\n        \n        return max*max;\n    }\n}","compare_result":"0000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"maximal-square"}