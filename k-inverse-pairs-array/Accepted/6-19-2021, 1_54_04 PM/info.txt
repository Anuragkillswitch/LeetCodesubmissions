{"id":510046807,"lang":"java","time":"1Â month","timestamp":1624091044,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/510046807/","is_pending":"Not Pending","title":"K Inverse Pairs Array","memory":"39.9 MB","code":"class Solution {\n    public int kInversePairs(int n, int k) {\n        int[][] dp = new int[n + 1][k + 1];\n        int M = 1000000007;\n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j <= k; j++) {\n                if (j == 0)\n                    dp[i][j] = 1;\n                else {\n                    int val = (dp[i - 1][j] + M - ((j - i) >= 0 ? dp[i - 1][j - i] : 0)) % M;\n                    dp[i][j] = (dp[i][j - 1] + val) % M;\n                }\n            }\n        }\n        return ((dp[n][k] + M - (k > 0 ? dp[n][k - 1] : 0)) % M);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"k-inverse-pairs-array"}