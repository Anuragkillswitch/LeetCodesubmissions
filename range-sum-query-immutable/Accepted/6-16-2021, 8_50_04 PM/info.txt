{"id":508816515,"lang":"java","time":"1 month, 1 week","timestamp":1623856804,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/508816515/","is_pending":"Not Pending","title":"Range Sum Query - Immutable","memory":"43.5 MB","code":"class NumArray {\n    int[] internalNums;\n    public NumArray(int[] nums) {\n        internalNums=new int[nums.length+1];\n        for(int i=1;i<=nums.length;i++){\n            internalNums[i]=internalNums[i-1]+nums[i-1];//Cumulative sum\n        }\n    }\n    \n    public int sumRange(int left, int right) {\n        return internalNums[right+1]-internalNums[left];\n    }\n    //Right +1 cumulative sum gives sum upto the previous element and left gives the sum till the left-1th index\n    //So the difference would give us the sum within the range\n}","compare_result":"111111111111111","title_slug":"range-sum-query-immutable"}