{"id":471272444,"lang":"c","time":"4Â months","timestamp":1616472069,"status_display":"Accepted","runtime":"380 ms","url":"/submissions/detail/471272444/","is_pending":"Not Pending","title":"3Sum","memory":"31.8 MB","code":"int** threeSum(int* nums, int numsSize, int* returnSize, int** returnColumnSizes){\n\n    printf(\"SIZE IS %d\\n\",numsSize);\n    quick_sort(nums,0,numsSize-1);\n    \n    int i,j,k,b[1000000][3],t=0,x,y,temp=0,c=0,p=0;\n    \n    for(i=0;i<numsSize-2;i++)\n    {\n   \n    j=i+1;\n    k=numsSize-1;\n        \n    if(nums[i]>0&&nums[j]>0&&nums[k]>0)\n    break;\n        \n    while(j<k)\n    {\n   \n    if(nums[i]+nums[j]+nums[k]==0)\n    {\n    \n    if(t==0)\n    {\n    b[t][0]=nums[i];\n    b[t][1]=nums[j];\n    b[t][2]=nums[k];\n    ++t;\n    }\n     \n    \n    else\n    {\n        c=0;\n    for(p=t-1;p>=0;p--)\n    {\n        if(b[p][0]==nums[i]&&b[p][1]==nums[j]&&b[p][2]==nums[k])\n        {\n            ++c;\n            break;\n        }\n    }\n        \n    if(c==0)\n    {\n    b[t][0]=nums[i];\n    b[t][1]=nums[j];\n    b[t][2]=nums[k];\n    ++t;    \n    }\n    }\n\n    j++;\n    k--;\n    }\n        \n    else if(nums[i]+nums[j]+nums[k]>0)\n    k--;    \n    else if(nums[i]+nums[j]+nums[k]<0)\n    j++;  \n    }\n        \n    }\n    \n    printf(\"VALUE OF T IS %d\\n\",t);\n    \n    *returnSize =t;\n    int **result = (int **)malloc(t * sizeof(int *));\n    *returnColumnSizes = (int *)malloc(t * sizeof(int));\n    \n    for (int i = 0; i <t; i++){\n        (*returnColumnSizes)[i] =3;\n        \n        result[i] =(int *)malloc(3*sizeof(int));\n        result[i][0] = b[i][0];\n        result[i][1] = b[i][1];\n        result[i][2] = b[i][2];\n    }   \n\n    \nreturn result;    \n}\n\nvoid quick_sort(int nums[],int f, int l) {\n  int i, j, t, p = 0;\n\n  if (f < l) {\n    p = f;\n    i = f;\n    j = l;\n\n    while (i < j) {\n      while (nums[i] <= nums[p] && i < l)\n        i++;\n      while (nums[j] > nums[p])\n        j--;\n      if (i < j) {\n        t = nums[i];\n        nums[i] = nums[j];\n        nums[j] = t;\n      }\n    }\n\n    t = nums[p];\n    nums[p] = nums[j];\n    nums[j] = t;\n    quick_sort(nums,f, j - 1);\n    quick_sort(nums,j + 1, l);\n  }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum"}