{"id":524851538,"lang":"java","time":"5 days, 23 hours","timestamp":1626681720,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/524851538/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\n\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        if(p.val<root.val && q.val<root.val){\n            return lowestCommonAncestor(root.left,p,q);\n        }else if(p.val>root.val && q.val>root.val)\n        {\n            return lowestCommonAncestor(root.right,p,q);\n        }else if(p.val<root.val && q.val>root.val){\n            return root;\n        }\n    }\n}","compare_result":null,"title_slug":"lowest-common-ancestor-of-a-binary-search-tree"}