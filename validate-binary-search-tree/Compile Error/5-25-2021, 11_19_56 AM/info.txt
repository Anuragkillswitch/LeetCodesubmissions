{"id":497929777,"lang":"java","time":"2Â months","timestamp":1621921796,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/497929777/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n  \n    public boolean isValidBST(TreeNode root) {\n     if(root == null){\n            return true;\n        }\n         boolean res = true;\n        \n        res = isValidBST(root.left);\n        if(!res){\n            return res;\n        }\n        \n        if(pre!=null&&pre.val>=root.val){\n            return false;\n        }else{\n            pre = root;\n        } \n        \n        res = isValidBST(root.right);\n        if(!res){\n            return res;\n        }\n        \n        return res;\n        \n    }\n\n}","compare_result":null,"title_slug":"validate-binary-search-tree"}