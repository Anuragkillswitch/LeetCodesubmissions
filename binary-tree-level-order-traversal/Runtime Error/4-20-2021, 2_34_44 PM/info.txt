{"id":482967193,"lang":"c","time":"3Â months","timestamp":1618909484,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/482967193/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"N/A","code":"struct queue {\n    struct TreeNode *tn;\n    int layer;\n    struct qnode *next;\n};\n\nvoid enqueue(struct queue **q, struct TreeNode *tn, int layer) {\n    struct queue *new;\n    struct queue *p;\n    \n    new = malloc(sizeof(struct queue));\n    new->tn = tn;\n    new->layer = layer;\n    new->next = 0;\n    \n    p = (*q);\n    if (p == 0)\n        *q = new;\n    else {\n        while (p->next)\n            p = p->next;\n    \n        p->next = new;\n    }\n}\n\nstruct TreeNode *dequeue(struct queue **q, int *layer) {\n    struct queue *tmp;\n    struct TreeNode *tn;\n    \n    tmp = *q;\n    tn = tmp->tn;\n    *layer = tmp->layer;\n    *q = tmp->next;\n    free(tmp);\n    \n    return tn;\n}\n\nint** levelOrder(struct TreeNode* root, int** columnSizes, int* returnSize) {\n    struct queue *q = 0;\n    struct TreeNode *p;\n    int **trav = 0;\n    int layer = 0;\n    \n    *columnSizes = 0;\n    *returnSize = 0;\n    if (root == 0)\n        return 0;\n    \n    enqueue(&q, root, layer);\n    while (q) {\n        p = dequeue(&q, &layer);\n        if (p->left)\n            enqueue(&q, p->left, layer + 1);\n        if (p->right)\n            enqueue(&q, p->right, layer + 1);\n        \n        if (layer == *returnSize) {\n            trav = realloc(trav, sizeof(int *) * (*returnSize + 1));\n            trav[layer] = 0;\n            *columnSizes = realloc(*columnSizes, sizeof(int) * (*returnSize + 1));\n            (*columnSizes)[layer] = 0;\n            (*returnSize)++;\n        }\n        trav[layer] = realloc(trav[layer], sizeof(int) * ((*columnSizes)[layer] + 1));\n        trav[layer][(*columnSizes)[layer]] = p->val;\n        (*columnSizes)[layer] += 1;\n    }\n    \n    return trav;\n}","compare_result":"0000000000000000000000000000000000","title_slug":"binary-tree-level-order-traversal"}