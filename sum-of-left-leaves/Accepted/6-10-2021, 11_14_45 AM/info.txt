{"id":505777038,"lang":"java","time":"1 month, 2 weeks","timestamp":1623303885,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/505777038/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"36.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int sum=0;\n    public int sumOfLeftLeaves(TreeNode root) {\n        helper(root);\n        return sum;\n    }\n    private void helper(TreeNode root)\n    {\n        if(root==null)return;\n        \n        if(root.left!=null && root.left.left==null && root.left.right==null)\n            sum+=root.left.val;\n        \n        helper(root.left);\n        helper(root.right);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-left-leaves"}