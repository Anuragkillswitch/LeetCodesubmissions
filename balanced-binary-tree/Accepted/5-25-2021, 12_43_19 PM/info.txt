{"id":497960640,"lang":"java","time":"2Â months","timestamp":1621926799,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/497960640/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"38.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    boolean is;\n    public boolean isBalanced(TreeNode root) {\n        is=true;\n        balancedHeight(root);\n        return is;\n    }\n    \n    private int balancedHeight(TreeNode root)\n    {\n        if(is==false) return 0;\n        if(root==null) return 0;\n        \n        int h1=balancedHeight(root.left);\n        int h2=balancedHeight(root.right);\n        \n        if(Math.abs(h1-h2)>1)\n            {is=false;return -1;}\n        \n        return Math.max(h1,h2)+1;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree"}