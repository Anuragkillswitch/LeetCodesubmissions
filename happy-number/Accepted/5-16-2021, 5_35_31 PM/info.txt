{"id":493945289,"lang":"java","time":"2 months, 1 week","timestamp":1621166731,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/493945289/","is_pending":"Not Pending","title":"Happy Number","memory":"36.2 MB","code":"class Solution {\n    public boolean isHappy(int n) {\n        HashSet<Integer> seen=new HashSet<>();\n      \n        while(n!=1)\n        {\n            int current=n;\n            int sum=0;\n            while(current!=0)\n            {\n                sum+=((current%10) * (current%10));\n                current/=10;\n            }\n            \n            if(seen.contains(sum))  //To check if it's in a cycle and we've seen this\n                return false;       //particular number before\n            \n            seen.add(sum); //Storing the number to avoid cycles\n            n=sum;\n        }\n        \n        return true;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"happy-number"}