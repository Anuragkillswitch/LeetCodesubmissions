{"id":518814722,"lang":"java","time":"2 weeks, 3 days","timestamp":1625670633,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/518814722/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"38.7 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int depth;\n    public int maxDepth(TreeNode root) {\n        if(root==null)return 0;\n        int left=maxDepth(root.left);\n        int right=maxDepth(root.right);\n        \n        return 1+Math.max(left,right);\n    }\n    \n    \n}","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree"}